version: '3.8'

services:
  # Client (React Frontend)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Maps host port 3000 to container port 3000
    environment:
      - NODE_ENV=development # Use 'production' for prod builds
      - CHOKIDAR_USEPOLLING=true # Helps with file watching in WSL
    volumes:
      - ./client:/app
      - /app/node_modules # Persist node_modules separately
    depends_on:
      - server
    networks:
      - compoundefi-network

  # Server (Express Backend)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000" # Maps host port 5000 to container port 5000
    environment:
      - NODE_ENV=development
      - PORT=5000
      - APTOS_NETWORK=${APTOS_NETWORK}
      - APTOS_PRIVATE_KEY=${APTOS_PRIVATE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CRYPTOPANIC_API_KEY=${CRYPTOPANIC_API_KEY}
      - COINMARKETCAP_API_KEY=${COINMARKETCAP_API_KEY}
      - PANORA_API_KEY=${PANORA_API_KEY}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
      - MONGO_URI=mongodb://mongo:27017/compoundefi # MongoDB connection
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongo
    networks:
      - compoundefi-network

  # MongoDB Database
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017" # Exposes MongoDB port (optional for local access)
    volumes:
      - mongo-data:/data/db # Persists database data
    environment:
      - MONGO_INITDB_DATABASE=compoundefi
    networks:
      - compoundefi-network

# Volumes for persistent data
volumes:
  mongo-data:

# Network for service communication
networks:
  compoundefi-network:
    driver: bridge