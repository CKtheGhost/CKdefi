{"ast":null,"code":"var _jsxFileName = \"/home/ck/compoundefi/client/src/pages/Landing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useWalletContext } from '../context/WalletContext';\nimport LandingLayout from '../components/layout/LandingLayout';\nimport Hero from '../components/landing/Hero';\nimport Features from '../components/landing/Features';\nimport Protocols from '../components/landing/Protocols';\nimport ConnectSection from '../components/landing/ConnectSection';\nimport { useMarketData } from '../hooks/useMarketData';\nimport { useNotification } from '../context/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Landing = () => {\n  _s();\n  var _topProtocols$;\n  const navigate = useNavigate();\n  const {\n    isConnected,\n    address,\n    connectWallet\n  } = useWalletContext();\n  const {\n    stakingData,\n    loading,\n    fetchMarketData\n  } = useMarketData();\n  const {\n    showNotification\n  } = useNotification();\n  const [topProtocols, setTopProtocols] = useState([]);\n  useEffect(() => {\n    // If user is already connected and has completed onboarding, redirect to dashboard\n    if (isConnected && address && localStorage.getItem('onboardingCompleted') === 'true') {\n      navigate('/dashboard');\n    }\n\n    // If connected but onboarding not completed, redirect to onboarding\n    if (isConnected && address && localStorage.getItem('onboardingCompleted') !== 'true') {\n      navigate('/onboarding');\n    }\n  }, [isConnected, address, navigate]);\n  useEffect(() => {\n    // Fetch market data for protocol showcase\n    fetchMarketData();\n  }, [fetchMarketData]);\n  useEffect(() => {\n    // Extract top protocols by APR when data is loaded\n    if (stakingData !== null && stakingData !== void 0 && stakingData.protocols) {\n      const protocols = Object.entries(stakingData.protocols).map(([name, data]) => {\n        var _data$staking;\n        return {\n          name,\n          apr: parseFloat(((_data$staking = data.staking) === null || _data$staking === void 0 ? void 0 : _data$staking.apr) || 0),\n          tvl: parseFloat(data.tvl || 0),\n          type: data.type || 'staking',\n          description: data.description || `${name} is a ${data.type || 'staking'} protocol on Aptos.`,\n          logo: data.logo || '/assets/images/protocols/default.png'\n        };\n      }).filter(protocol => protocol.apr > 0).sort((a, b) => b.apr - a.apr).slice(0, 6);\n      setTopProtocols(protocols);\n    }\n  }, [stakingData]);\n  const handleConnectWallet = async () => {\n    try {\n      await connectWallet();\n      showNotification('Wallet connected successfully!', 'success');\n\n      // Check if onboarding is completed\n      if (localStorage.getItem('onboardingCompleted') === 'true') {\n        navigate('/dashboard');\n      } else {\n        navigate('/onboarding');\n      }\n    } catch (error) {\n      showNotification(`Failed to connect wallet: ${error.message}`, 'error');\n    }\n  };\n  const handleGetStarted = () => {\n    if (isConnected) {\n      if (localStorage.getItem('onboardingCompleted') === 'true') {\n        navigate('/dashboard');\n      } else {\n        navigate('/onboarding');\n      }\n    } else {\n      // Scroll to connect wallet section\n      const connectSection = document.getElementById('connect-section');\n      if (connectSection) {\n        connectSection.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LandingLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      onGetStarted: handleGetStarted,\n      topYield: ((_topProtocols$ = topProtocols[0]) === null || _topProtocols$ === void 0 ? void 0 : _topProtocols$.apr) || 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Features, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Protocols, {\n      protocols: topProtocols,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectSection, {\n      id: \"connect-section\",\n      onConnect: handleConnectWallet,\n      connected: isConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Landing, \"iShlQBfzQH/iXKx+OFjLF1itboE=\", false, function () {\n  return [useNavigate, useWalletContext, useMarketData, useNotification];\n});\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useWalletContext","LandingLayout","Hero","Features","Protocols","ConnectSection","useMarketData","useNotification","jsxDEV","_jsxDEV","Landing","_s","_topProtocols$","navigate","isConnected","address","connectWallet","stakingData","loading","fetchMarketData","showNotification","topProtocols","setTopProtocols","localStorage","getItem","protocols","Object","entries","map","name","data","_data$staking","apr","parseFloat","staking","tvl","type","description","logo","filter","protocol","sort","a","b","slice","handleConnectWallet","error","message","handleGetStarted","connectSection","document","getElementById","scrollIntoView","behavior","children","onGetStarted","topYield","fileName","_jsxFileName","lineNumber","columnNumber","id","onConnect","connected","_c","$RefreshReg$"],"sources":["/home/ck/compoundefi/client/src/pages/Landing.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useWalletContext } from '../context/WalletContext';\r\nimport LandingLayout from '../components/layout/LandingLayout';\r\nimport Hero from '../components/landing/Hero';\r\nimport Features from '../components/landing/Features';\r\nimport Protocols from '../components/landing/Protocols';\r\nimport ConnectSection from '../components/landing/ConnectSection';\r\nimport { useMarketData } from '../hooks/useMarketData';\r\nimport { useNotification } from '../context/NotificationContext';\r\n\r\nconst Landing = () => {\r\n  const navigate = useNavigate();\r\n  const { isConnected, address, connectWallet } = useWalletContext();\r\n  const { stakingData, loading, fetchMarketData } = useMarketData();\r\n  const { showNotification } = useNotification();\r\n  const [topProtocols, setTopProtocols] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // If user is already connected and has completed onboarding, redirect to dashboard\r\n    if (isConnected && address && localStorage.getItem('onboardingCompleted') === 'true') {\r\n      navigate('/dashboard');\r\n    }\r\n    \r\n    // If connected but onboarding not completed, redirect to onboarding\r\n    if (isConnected && address && localStorage.getItem('onboardingCompleted') !== 'true') {\r\n      navigate('/onboarding');\r\n    }\r\n  }, [isConnected, address, navigate]);\r\n\r\n  useEffect(() => {\r\n    // Fetch market data for protocol showcase\r\n    fetchMarketData();\r\n  }, [fetchMarketData]);\r\n\r\n  useEffect(() => {\r\n    // Extract top protocols by APR when data is loaded\r\n    if (stakingData?.protocols) {\r\n      const protocols = Object.entries(stakingData.protocols)\r\n        .map(([name, data]) => ({\r\n          name,\r\n          apr: parseFloat(data.staking?.apr || 0),\r\n          tvl: parseFloat(data.tvl || 0),\r\n          type: data.type || 'staking',\r\n          description: data.description || `${name} is a ${data.type || 'staking'} protocol on Aptos.`,\r\n          logo: data.logo || '/assets/images/protocols/default.png'\r\n        }))\r\n        .filter(protocol => protocol.apr > 0)\r\n        .sort((a, b) => b.apr - a.apr)\r\n        .slice(0, 6);\r\n\r\n      setTopProtocols(protocols);\r\n    }\r\n  }, [stakingData]);\r\n\r\n  const handleConnectWallet = async () => {\r\n    try {\r\n      await connectWallet();\r\n      showNotification('Wallet connected successfully!', 'success');\r\n      \r\n      // Check if onboarding is completed\r\n      if (localStorage.getItem('onboardingCompleted') === 'true') {\r\n        navigate('/dashboard');\r\n      } else {\r\n        navigate('/onboarding');\r\n      }\r\n    } catch (error) {\r\n      showNotification(`Failed to connect wallet: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const handleGetStarted = () => {\r\n    if (isConnected) {\r\n      if (localStorage.getItem('onboardingCompleted') === 'true') {\r\n        navigate('/dashboard');\r\n      } else {\r\n        navigate('/onboarding');\r\n      }\r\n    } else {\r\n      // Scroll to connect wallet section\r\n      const connectSection = document.getElementById('connect-section');\r\n      if (connectSection) {\r\n        connectSection.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LandingLayout>\r\n      <Hero \r\n        onGetStarted={handleGetStarted}\r\n        topYield={topProtocols[0]?.apr || 0}\r\n      />\r\n      \r\n      <Features />\r\n      \r\n      <Protocols \r\n        protocols={topProtocols} \r\n        loading={loading}\r\n      />\r\n      \r\n      <ConnectSection \r\n        id=\"connect-section\"\r\n        onConnect={handleConnectWallet} \r\n        connected={isConnected}\r\n      />\r\n    </LandingLayout>\r\n  );\r\n};\r\n\r\nexport default Landing;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,cAAc,MAAM,sCAAsC;AACjE,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACpB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe,WAAW;IAAEC,OAAO;IAAEC;EAAc,CAAC,GAAGhB,gBAAgB,CAAC,CAAC;EAClE,MAAM;IAAEiB,WAAW;IAAEC,OAAO;IAAEC;EAAgB,CAAC,GAAGb,aAAa,CAAC,CAAC;EACjE,MAAM;IAAEc;EAAiB,CAAC,GAAGb,eAAe,CAAC,CAAC;EAC9C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,IAAIgB,WAAW,IAAIC,OAAO,IAAIQ,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,KAAK,MAAM,EAAE;MACpFX,QAAQ,CAAC,YAAY,CAAC;IACxB;;IAEA;IACA,IAAIC,WAAW,IAAIC,OAAO,IAAIQ,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,KAAK,MAAM,EAAE;MACpFX,QAAQ,CAAC,aAAa,CAAC;IACzB;EACF,CAAC,EAAE,CAACC,WAAW,EAAEC,OAAO,EAAEF,QAAQ,CAAC,CAAC;EAEpCf,SAAS,CAAC,MAAM;IACd;IACAqB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErBrB,SAAS,CAAC,MAAM;IACd;IACA,IAAImB,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEQ,SAAS,EAAE;MAC1B,MAAMA,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACV,WAAW,CAACQ,SAAS,CAAC,CACpDG,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAC;QAAA,IAAAC,aAAA;QAAA,OAAM;UACtBF,IAAI;UACJG,GAAG,EAAEC,UAAU,CAAC,EAAAF,aAAA,GAAAD,IAAI,CAACI,OAAO,cAAAH,aAAA,uBAAZA,aAAA,CAAcC,GAAG,KAAI,CAAC,CAAC;UACvCG,GAAG,EAAEF,UAAU,CAACH,IAAI,CAACK,GAAG,IAAI,CAAC,CAAC;UAC9BC,IAAI,EAAEN,IAAI,CAACM,IAAI,IAAI,SAAS;UAC5BC,WAAW,EAAEP,IAAI,CAACO,WAAW,IAAI,GAAGR,IAAI,SAASC,IAAI,CAACM,IAAI,IAAI,SAAS,qBAAqB;UAC5FE,IAAI,EAAER,IAAI,CAACQ,IAAI,IAAI;QACrB,CAAC;MAAA,CAAC,CAAC,CACFC,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACR,GAAG,GAAG,CAAC,CAAC,CACpCS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACX,GAAG,GAAGU,CAAC,CAACV,GAAG,CAAC,CAC7BY,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAEdtB,eAAe,CAACG,SAAS,CAAC;IAC5B;EACF,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,MAAM4B,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAM7B,aAAa,CAAC,CAAC;MACrBI,gBAAgB,CAAC,gCAAgC,EAAE,SAAS,CAAC;;MAE7D;MACA,IAAIG,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,KAAK,MAAM,EAAE;QAC1DX,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,MAAM;QACLA,QAAQ,CAAC,aAAa,CAAC;MACzB;IACF,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACd1B,gBAAgB,CAAC,6BAA6B0B,KAAK,CAACC,OAAO,EAAE,EAAE,OAAO,CAAC;IACzE;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIlC,WAAW,EAAE;MACf,IAAIS,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,KAAK,MAAM,EAAE;QAC1DX,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,MAAM;QACLA,QAAQ,CAAC,aAAa,CAAC;MACzB;IACF,CAAC,MAAM;MACL;MACA,MAAMoC,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;MACjE,IAAIF,cAAc,EAAE;QAClBA,cAAc,CAACG,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MACvD;IACF;EACF,CAAC;EAED,oBACE5C,OAAA,CAACR,aAAa;IAAAqD,QAAA,gBACZ7C,OAAA,CAACP,IAAI;MACHqD,YAAY,EAAEP,gBAAiB;MAC/BQ,QAAQ,EAAE,EAAA5C,cAAA,GAAAS,YAAY,CAAC,CAAC,CAAC,cAAAT,cAAA,uBAAfA,cAAA,CAAiBoB,GAAG,KAAI;IAAE;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAEFnD,OAAA,CAACN,QAAQ;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEZnD,OAAA,CAACL,SAAS;MACRqB,SAAS,EAAEJ,YAAa;MACxBH,OAAO,EAAEA;IAAQ;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eAEFnD,OAAA,CAACJ,cAAc;MACbwD,EAAE,EAAC,iBAAiB;MACpBC,SAAS,EAAEjB,mBAAoB;MAC/BkB,SAAS,EAAEjD;IAAY;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB,CAAC;AAACjD,EAAA,CAjGID,OAAO;EAAA,QACMX,WAAW,EACoBC,gBAAgB,EACdM,aAAa,EAClCC,eAAe;AAAA;AAAAyD,EAAA,GAJxCtD,OAAO;AAmGb,eAAeA,OAAO;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}