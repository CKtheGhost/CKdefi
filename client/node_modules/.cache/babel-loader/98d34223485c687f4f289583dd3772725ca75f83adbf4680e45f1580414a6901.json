{"ast":null,"code":"var _jsxFileName = \"/home/ck/compoundefi/client/src/components/wallet/AllocationChart.jsx\",\n  _s = $RefreshSig$();\n// src/components/wallet/AllocationChart.jsx\n\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllocationChart = ({\n  portfolioData\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    if (!portfolioData || !chartRef.current) return;\n\n    // Cleanup previous chart if it exists\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n\n    // Prepare data for chart\n    const allocation = [];\n    const labels = [];\n    const colors = ['#3b82f6',\n    // blue-500\n    '#10b981',\n    // green-500\n    '#8b5cf6',\n    // purple-500\n    '#f59e0b',\n    // amber-500\n    '#ef4444',\n    // red-500\n    '#ec4899' // pink-500\n    ];\n\n    // Add native APT\n    if (portfolioData.apt && parseFloat(portfolioData.apt.amount) > 0) {\n      allocation.push(parseFloat(portfolioData.apt.valueUSD));\n      labels.push('Native APT');\n    }\n\n    // Add staked tokens\n    if (portfolioData.stAPT && parseFloat(portfolioData.stAPT.amount) > 0) {\n      allocation.push(parseFloat(portfolioData.stAPT.valueUSD));\n      labels.push('Amnis stAPT');\n    }\n    if (portfolioData.sthAPT && parseFloat(portfolioData.sthAPT.amount) > 0) {\n      allocation.push(parseFloat(portfolioData.sthAPT.valueUSD));\n      labels.push('Thala sthAPT');\n    }\n    if (portfolioData.tAPT && parseFloat(portfolioData.tAPT.amount) > 0) {\n      allocation.push(parseFloat(portfolioData.tAPT.valueUSD));\n      labels.push('Tortuga tAPT');\n    }\n    if (portfolioData.dAPT && parseFloat(portfolioData.dAPT.amount) > 0) {\n      allocation.push(parseFloat(portfolioData.dAPT.valueUSD));\n      labels.push('Ditto dAPT');\n    }\n\n    // Add AMM liquidity\n    if (portfolioData.ammLiquidity && portfolioData.ammLiquidity.hasLiquidity) {\n      if (portfolioData.ammLiquidity.positions && portfolioData.ammLiquidity.positions.length > 0) {\n        // Add each liquidity position\n        portfolioData.ammLiquidity.positions.forEach(position => {\n          allocation.push(parseFloat(position.valueUSD));\n          labels.push(`${position.protocol} Liquidity`);\n        });\n      } else {\n        // Add total liquidity if positions not detailed\n        allocation.push(parseFloat(portfolioData.ammLiquidity.estimatedValueUSD));\n        labels.push('AMM Liquidity');\n      }\n    }\n\n    // Create chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels,\n        datasets: [{\n          data: allocation,\n          backgroundColor: colors,\n          borderWidth: 2,\n          borderColor: '#1f2937' // gray-800\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'right',\n            labels: {\n              color: 'rgba(255, 255, 255, 0.8)',\n              font: {\n                size: 12\n              },\n              padding: 20\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                const value = context.raw;\n                const total = context.dataset.data.reduce((a, b) => a + b, 0);\n                const percentage = Math.round(value / total * 100);\n                return `${context.label}: $${value.toLocaleString()} (${percentage}%)`;\n              }\n            }\n          }\n        },\n        cutout: '60%'\n      }\n    });\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [portfolioData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 rounded-lg shadow-lg p-6 mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-white mb-4\",\n      children: \"Portfolio Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative h-80\",\n      children: portfolioData && Object.keys(portfolioData).length > 0 ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        id: \"allocation-chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex h-full items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"No portfolio data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(AllocationChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = AllocationChart;\nexport default AllocationChart;\nvar _c;\n$RefreshReg$(_c, \"AllocationChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","AllocationChart","portfolioData","_s","chartRef","chartInstance","current","destroy","ctx","getContext","allocation","labels","colors","apt","parseFloat","amount","push","valueUSD","stAPT","sthAPT","tAPT","dAPT","ammLiquidity","hasLiquidity","positions","length","forEach","position","protocol","estimatedValueUSD","type","data","datasets","backgroundColor","borderWidth","borderColor","options","responsive","maintainAspectRatio","plugins","legend","color","font","size","padding","tooltip","callbacks","label","context","value","raw","total","dataset","reduce","a","b","percentage","Math","round","toLocaleString","cutout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","ref","id","_c","$RefreshReg$"],"sources":["/home/ck/compoundefi/client/src/components/wallet/AllocationChart.jsx"],"sourcesContent":["// src/components/wallet/AllocationChart.jsx\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst AllocationChart = ({ portfolioData }) => {\r\n  const chartRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    if (!portfolioData || !chartRef.current) return;\r\n    \r\n    // Cleanup previous chart if it exists\r\n    if (chartInstance.current) {\r\n      chartInstance.current.destroy();\r\n    }\r\n    \r\n    const ctx = chartRef.current.getContext('2d');\r\n    \r\n    // Prepare data for chart\r\n    const allocation = [];\r\n    const labels = [];\r\n    const colors = [\r\n      '#3b82f6', // blue-500\r\n      '#10b981', // green-500\r\n      '#8b5cf6', // purple-500\r\n      '#f59e0b', // amber-500\r\n      '#ef4444', // red-500\r\n      '#ec4899', // pink-500\r\n    ];\r\n    \r\n    // Add native APT\r\n    if (portfolioData.apt && parseFloat(portfolioData.apt.amount) > 0) {\r\n      allocation.push(parseFloat(portfolioData.apt.valueUSD));\r\n      labels.push('Native APT');\r\n    }\r\n    \r\n    // Add staked tokens\r\n    if (portfolioData.stAPT && parseFloat(portfolioData.stAPT.amount) > 0) {\r\n      allocation.push(parseFloat(portfolioData.stAPT.valueUSD));\r\n      labels.push('Amnis stAPT');\r\n    }\r\n    \r\n    if (portfolioData.sthAPT && parseFloat(portfolioData.sthAPT.amount) > 0) {\r\n      allocation.push(parseFloat(portfolioData.sthAPT.valueUSD));\r\n      labels.push('Thala sthAPT');\r\n    }\r\n    \r\n    if (portfolioData.tAPT && parseFloat(portfolioData.tAPT.amount) > 0) {\r\n      allocation.push(parseFloat(portfolioData.tAPT.valueUSD));\r\n      labels.push('Tortuga tAPT');\r\n    }\r\n    \r\n    if (portfolioData.dAPT && parseFloat(portfolioData.dAPT.amount) > 0) {\r\n      allocation.push(parseFloat(portfolioData.dAPT.valueUSD));\r\n      labels.push('Ditto dAPT');\r\n    }\r\n    \r\n    // Add AMM liquidity\r\n    if (portfolioData.ammLiquidity && portfolioData.ammLiquidity.hasLiquidity) {\r\n      if (portfolioData.ammLiquidity.positions && portfolioData.ammLiquidity.positions.length > 0) {\r\n        // Add each liquidity position\r\n        portfolioData.ammLiquidity.positions.forEach(position => {\r\n          allocation.push(parseFloat(position.valueUSD));\r\n          labels.push(`${position.protocol} Liquidity`);\r\n        });\r\n      } else {\r\n        // Add total liquidity if positions not detailed\r\n        allocation.push(parseFloat(portfolioData.ammLiquidity.estimatedValueUSD));\r\n        labels.push('AMM Liquidity');\r\n      }\r\n    }\r\n    \r\n    // Create chart\r\n    chartInstance.current = new Chart(ctx, {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels,\r\n        datasets: [{\r\n          data: allocation,\r\n          backgroundColor: colors,\r\n          borderWidth: 2,\r\n          borderColor: '#1f2937' // gray-800\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            position: 'right',\r\n            labels: {\r\n              color: 'rgba(255, 255, 255, 0.8)',\r\n              font: {\r\n                size: 12\r\n              },\r\n              padding: 20\r\n            }\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                const value = context.raw;\r\n                const total = context.dataset.data.reduce((a, b) => a + b, 0);\r\n                const percentage = Math.round((value / total) * 100);\r\n                return `${context.label}: $${value.toLocaleString()} (${percentage}%)`;\r\n              }\r\n            }\r\n          }\r\n        },\r\n        cutout: '60%'\r\n      }\r\n    });\r\n    \r\n    return () => {\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n      }\r\n    };\r\n  }, [portfolioData]);\r\n  \r\n  return (\r\n    <div className=\"bg-gray-800 rounded-lg shadow-lg p-6 mb-6\">\r\n      <h3 className=\"text-lg font-semibold text-white mb-4\">Portfolio Allocation</h3>\r\n      <div className=\"relative h-80\">\r\n        {portfolioData && Object.keys(portfolioData).length > 0 ? (\r\n          <canvas ref={chartRef} id=\"allocation-chart\"></canvas>\r\n        ) : (\r\n          <div className=\"flex h-full items-center justify-center\">\r\n            <p className=\"text-gray-400\">No portfolio data available</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllocationChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}