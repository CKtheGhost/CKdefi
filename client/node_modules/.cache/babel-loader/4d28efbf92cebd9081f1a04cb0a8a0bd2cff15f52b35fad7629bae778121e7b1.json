{"ast":null,"code":"var _jsxFileName = \"/home/ck/compoundefi/client/src/components/optimizer/PortfolioBalance.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\n\n/**\r\n * Component that shows current portfolio balance vs recommended allocation\r\n * \r\n * @param {Object} props\r\n * @param {Object} props.portfolioData - Current portfolio data\r\n * @param {Object} props.stakingData - Current staking protocol data\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PortfolioBalance = ({\n  portfolioData,\n  stakingData\n}) => {\n  _s();\n  const [recommendedAllocation, setRecommendedAllocation] = useState([]);\n  const [currentAllocation, setCurrentAllocation] = useState([]);\n  const [driftAnalysis, setDriftAnalysis] = useState(null);\n\n  // Calculate current allocation from portfolio data\n  useEffect(() => {\n    if (!portfolioData) return;\n    const {\n      apt,\n      stAPT,\n      sthAPT,\n      tAPT,\n      dAPT,\n      ammLiquidity,\n      totalValueUSD\n    } = portfolioData;\n    if (!totalValueUSD || totalValueUSD <= 0) return;\n    const currentTokens = [];\n\n    // Native APT\n    if (apt && parseFloat(apt.amount) > 0) {\n      currentTokens.push({\n        name: 'Native APT',\n        protocol: 'native',\n        type: 'holding',\n        percentage: (apt.valueUSD / totalValueUSD * 100).toFixed(2),\n        amount: apt.amount,\n        valueUSD: apt.valueUSD\n      });\n    }\n\n    // Staked APT - Amnis\n    if (stAPT && parseFloat(stAPT.amount) > 0) {\n      currentTokens.push({\n        name: 'stAPT (Amnis)',\n        protocol: 'amnis',\n        type: 'staking',\n        percentage: (stAPT.valueUSD / totalValueUSD * 100).toFixed(2),\n        amount: stAPT.amount,\n        valueUSD: stAPT.valueUSD\n      });\n    }\n\n    // Staked APT - Thala\n    if (sthAPT && parseFloat(sthAPT.amount) > 0) {\n      currentTokens.push({\n        name: 'sthAPT (Thala)',\n        protocol: 'thala',\n        type: 'staking',\n        percentage: (sthAPT.valueUSD / totalValueUSD * 100).toFixed(2),\n        amount: sthAPT.amount,\n        valueUSD: sthAPT.valueUSD\n      });\n    }\n\n    // Staked APT - Tortuga\n    if (tAPT && parseFloat(tAPT.amount) > 0) {\n      currentTokens.push({\n        name: 'tAPT (Tortuga)',\n        protocol: 'tortuga',\n        type: 'staking',\n        percentage: (tAPT.valueUSD / totalValueUSD * 100).toFixed(2),\n        amount: tAPT.amount,\n        valueUSD: tAPT.valueUSD\n      });\n    }\n\n    // Staked APT - Ditto\n    if (dAPT && parseFloat(dAPT.amount) > 0) {\n      currentTokens.push({\n        name: 'dAPT (Ditto)',\n        protocol: 'ditto',\n        type: 'staking',\n        percentage: (dAPT.valueUSD / totalValueUSD * 100).toFixed(2),\n        amount: dAPT.amount,\n        valueUSD: dAPT.valueUSD\n      });\n    }\n\n    // AMM Liquidity\n    if (ammLiquidity && ammLiquidity.hasLiquidity) {\n      currentTokens.push({\n        name: 'AMM Liquidity',\n        protocol: 'liquidity',\n        type: 'amm',\n        percentage: (ammLiquidity.estimatedValueUSD / totalValueUSD * 100).toFixed(2),\n        amount: ammLiquidity.estimatedValueUSD / ((apt === null || apt === void 0 ? void 0 : apt.valueUSD) / parseFloat(apt === null || apt === void 0 ? void 0 : apt.amount)),\n        valueUSD: ammLiquidity.estimatedValueUSD\n      });\n    }\n    setCurrentAllocation(currentTokens);\n  }, [portfolioData]);\n\n  // Get recommended allocation from staking data\n  useEffect(() => {\n    var _portfolioData$apt, _portfolioData$apt2;\n    if (!stakingData || !stakingData.strategies) return;\n\n    // Default to balanced strategy\n    const recommendedStrategy = stakingData.strategies.balanced || Object.values(stakingData.strategies)[0];\n    if (!recommendedStrategy || !recommendedStrategy.allocation) return;\n\n    // Calculate value for each recommended allocation based on current portfolio value\n    const totalValue = (portfolioData === null || portfolioData === void 0 ? void 0 : portfolioData.totalValueUSD) || 0;\n    const aptPrice = (portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$apt = portfolioData.apt) === null || _portfolioData$apt === void 0 ? void 0 : _portfolioData$apt.valueUSD) / parseFloat((portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$apt2 = portfolioData.apt) === null || _portfolioData$apt2 === void 0 ? void 0 : _portfolioData$apt2.amount) || 1);\n    const recommendedItems = recommendedStrategy.allocation.map(item => {\n      var _protocolData$product;\n      const protocolData = stakingData.protocols[item.protocol];\n      const productType = item.type || 'staking';\n      return {\n        name: (protocolData === null || protocolData === void 0 ? void 0 : (_protocolData$product = protocolData[productType]) === null || _protocolData$product === void 0 ? void 0 : _protocolData$product.product) || `${item.protocol.charAt(0).toUpperCase() + item.protocol.slice(1)} (${productType})`,\n        protocol: item.protocol,\n        type: productType,\n        percentage: item.percentage,\n        amount: totalValue > 0 ? (item.percentage / 100 * (totalValue / aptPrice)).toFixed(2) : 0,\n        valueUSD: totalValue > 0 ? (item.percentage / 100 * totalValue).toFixed(2) : 0\n      };\n    });\n    setRecommendedAllocation(recommendedItems);\n  }, [stakingData, portfolioData]);\n\n  // Calculate drift between current and recommended allocations\n  useEffect(() => {\n    if (currentAllocation.length === 0 || recommendedAllocation.length === 0) {\n      setDriftAnalysis(null);\n      return;\n    }\n    const analysis = calculateDrift(currentAllocation, recommendedAllocation);\n    setDriftAnalysis(analysis);\n  }, [currentAllocation, recommendedAllocation]);\n\n  // Helper function to calculate drift\n  const calculateDrift = (current, recommended) => {\n    const drifts = [];\n    let maxDrift = 0;\n    let totalDrift = 0;\n\n    // Create map of recommended allocations by protocol\n    const recommendedMap = recommended.reduce((map, item) => {\n      map[item.protocol] = item;\n      return map;\n    }, {});\n\n    // Calculate drift for each current position\n    current.forEach(item => {\n      const recommendedItem = recommendedMap[item.protocol];\n      if (recommendedItem) {\n        // Protocol exists in both current and recommended\n        const currentPct = parseFloat(item.percentage);\n        const targetPct = parseFloat(recommendedItem.percentage);\n        const drift = Math.abs(currentPct - targetPct);\n        drifts.push({\n          protocol: item.protocol,\n          name: item.name,\n          current: currentPct,\n          target: targetPct,\n          drift,\n          action: currentPct > targetPct ? 'decrease' : 'increase'\n        });\n        maxDrift = Math.max(maxDrift, drift);\n        totalDrift += drift;\n\n        // Remove from map to track protocols in recommended but not in current\n        delete recommendedMap[item.protocol];\n      } else {\n        // Current protocol not in recommended - should be fully removed\n        drifts.push({\n          protocol: item.protocol,\n          name: item.name,\n          current: parseFloat(item.percentage),\n          target: 0,\n          drift: parseFloat(item.percentage),\n          action: 'remove'\n        });\n        maxDrift = Math.max(maxDrift, parseFloat(item.percentage));\n        totalDrift += parseFloat(item.percentage);\n      }\n    });\n\n    // Add protocols that are in recommended but not in current\n    for (const [protocol, item] of Object.entries(recommendedMap)) {\n      drifts.push({\n        protocol,\n        name: item.name,\n        current: 0,\n        target: parseFloat(item.percentage),\n        drift: parseFloat(item.percentage),\n        action: 'add'\n      });\n      maxDrift = Math.max(maxDrift, parseFloat(item.percentage));\n      totalDrift += parseFloat(item.percentage);\n    }\n\n    // Sort by drift amount (largest first)\n    drifts.sort((a, b) => b.drift - a.drift);\n    const avgDrift = drifts.length > 0 ? totalDrift / drifts.length : 0;\n    const DEFAULT_THRESHOLD = 5; // 5% default threshold\n\n    return {\n      drifts,\n      maxDrift,\n      avgDrift,\n      totalDrift,\n      needsRebalance: maxDrift >= DEFAULT_THRESHOLD,\n      threshold: DEFAULT_THRESHOLD\n    };\n  };\n\n  // Determine if there's anything to rebalance\n  const needsRebalance = useMemo(() => {\n    return (driftAnalysis === null || driftAnalysis === void 0 ? void 0 : driftAnalysis.needsRebalance) || false;\n  }, [driftAnalysis]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold text-white mb-4\",\n      children: \"Portfolio Balance Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), !portfolioData || !currentAllocation.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-6\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400\",\n        children: \"Connect your wallet to view portfolio balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-md font-medium text-gray-300 mb-3\",\n            children: \"Current Allocation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: currentAllocation.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `w-3 h-3 rounded-full mr-2 ${getColorForProtocol(item.protocol)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-white\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-white\",\n                  children: [item.percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500 text-xs\",\n                  children: [item.amount, \" APT\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-md font-medium text-gray-300 mb-3\",\n            children: \"Recommended Allocation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: recommendedAllocation.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `w-3 h-3 rounded-full mr-2 ${getColorForProtocol(item.protocol)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-white\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-white\",\n                  children: [item.percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500 text-xs\",\n                  children: [item.amount, \" APT\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), driftAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 border-t border-gray-700 pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-md font-medium text-gray-300\",\n            children: \"Drift Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `px-2 py-1 rounded-md text-xs font-medium ${needsRebalance ? 'bg-red-900/50 text-red-400' : 'bg-green-900/50 text-green-400'}`,\n            children: needsRebalance ? 'Rebalance Recommended' : 'Portfolio Balanced'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 space-y-2\",\n          children: driftAnalysis.drifts.map((drift, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-3 h-3 rounded-full mr-2 ${getColorForProtocol(drift.protocol)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white\",\n                children: drift.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `ml-2 text-xs px-1.5 py-0.5 rounded ${drift.action === 'increase' ? 'bg-blue-900/50 text-blue-400' : drift.action === 'decrease' ? 'bg-yellow-900/50 text-yellow-400' : drift.action === 'add' ? 'bg-green-900/50 text-green-400' : 'bg-red-900/50 text-red-400'}`,\n                children: drift.action\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center text-white\",\n                children: [drift.current, \"%\", /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  className: \"h-4 w-4 mx-1\",\n                  fill: \"none\",\n                  viewBox: \"0 0 24 24\",\n                  stroke: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M13 5l7 7-7 7M5 5l7 7-7 7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 25\n                }, this), drift.target, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-xs\",\n                children: [\"Drift: \", drift.drift.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 pt-3 border-t border-gray-700 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400\",\n              children: \"Maximum drift:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `ml-2 font-medium ${needsRebalance ? 'text-red-400' : 'text-green-400'}`,\n              children: [driftAnalysis.maxDrift.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400\",\n              children: \"Threshold:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 font-medium text-white\",\n              children: [driftAnalysis.threshold, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to get color for protocol\n_s(PortfolioBalance, \"ZtjBhqdtc9raNgv74zxd5BZkXo8=\");\n_c = PortfolioBalance;\nconst getColorForProtocol = protocol => {\n  const colorMap = {\n    native: 'bg-gray-400',\n    amnis: 'bg-blue-500',\n    thala: 'bg-green-500',\n    tortuga: 'bg-purple-500',\n    ditto: 'bg-yellow-500',\n    liquidity: 'bg-red-500',\n    cetus: 'bg-pink-500',\n    pancakeswap: 'bg-indigo-500',\n    echo: 'bg-cyan-500',\n    aries: 'bg-teal-500'\n  };\n  return colorMap[protocol] || 'bg-gray-500';\n};\nexport default PortfolioBalance;\nvar _c;\n$RefreshReg$(_c, \"PortfolioBalance\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","Fragment","_Fragment","PortfolioBalance","portfolioData","stakingData","_s","recommendedAllocation","setRecommendedAllocation","currentAllocation","setCurrentAllocation","driftAnalysis","setDriftAnalysis","apt","stAPT","sthAPT","tAPT","dAPT","ammLiquidity","totalValueUSD","currentTokens","parseFloat","amount","push","name","protocol","type","percentage","valueUSD","toFixed","hasLiquidity","estimatedValueUSD","_portfolioData$apt","_portfolioData$apt2","strategies","recommendedStrategy","balanced","Object","values","allocation","totalValue","aptPrice","recommendedItems","map","item","_protocolData$product","protocolData","protocols","productType","product","charAt","toUpperCase","slice","length","analysis","calculateDrift","current","recommended","drifts","maxDrift","totalDrift","recommendedMap","reduce","forEach","recommendedItem","currentPct","targetPct","drift","Math","abs","target","action","max","entries","sort","a","b","avgDrift","DEFAULT_THRESHOLD","needsRebalance","threshold","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","getColorForProtocol","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","colorMap","native","amnis","thala","tortuga","ditto","liquidity","cetus","pancakeswap","echo","aries","$RefreshReg$"],"sources":["/home/ck/compoundefi/client/src/components/optimizer/PortfolioBalance.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\n\r\n/**\r\n * Component that shows current portfolio balance vs recommended allocation\r\n * \r\n * @param {Object} props\r\n * @param {Object} props.portfolioData - Current portfolio data\r\n * @param {Object} props.stakingData - Current staking protocol data\r\n */\r\nconst PortfolioBalance = ({ portfolioData, stakingData }) => {\r\n  const [recommendedAllocation, setRecommendedAllocation] = useState([]);\r\n  const [currentAllocation, setCurrentAllocation] = useState([]);\r\n  const [driftAnalysis, setDriftAnalysis] = useState(null);\r\n  \r\n  // Calculate current allocation from portfolio data\r\n  useEffect(() => {\r\n    if (!portfolioData) return;\r\n    \r\n    const { apt, stAPT, sthAPT, tAPT, dAPT, ammLiquidity, totalValueUSD } = portfolioData;\r\n    \r\n    if (!totalValueUSD || totalValueUSD <= 0) return;\r\n    \r\n    const currentTokens = [];\r\n    \r\n    // Native APT\r\n    if (apt && parseFloat(apt.amount) > 0) {\r\n      currentTokens.push({\r\n        name: 'Native APT',\r\n        protocol: 'native',\r\n        type: 'holding',\r\n        percentage: ((apt.valueUSD / totalValueUSD) * 100).toFixed(2),\r\n        amount: apt.amount,\r\n        valueUSD: apt.valueUSD\r\n      });\r\n    }\r\n    \r\n    // Staked APT - Amnis\r\n    if (stAPT && parseFloat(stAPT.amount) > 0) {\r\n      currentTokens.push({\r\n        name: 'stAPT (Amnis)',\r\n        protocol: 'amnis',\r\n        type: 'staking',\r\n        percentage: ((stAPT.valueUSD / totalValueUSD) * 100).toFixed(2),\r\n        amount: stAPT.amount,\r\n        valueUSD: stAPT.valueUSD\r\n      });\r\n    }\r\n    \r\n    // Staked APT - Thala\r\n    if (sthAPT && parseFloat(sthAPT.amount) > 0) {\r\n      currentTokens.push({\r\n        name: 'sthAPT (Thala)',\r\n        protocol: 'thala',\r\n        type: 'staking',\r\n        percentage: ((sthAPT.valueUSD / totalValueUSD) * 100).toFixed(2),\r\n        amount: sthAPT.amount,\r\n        valueUSD: sthAPT.valueUSD\r\n      });\r\n    }\r\n    \r\n    // Staked APT - Tortuga\r\n    if (tAPT && parseFloat(tAPT.amount) > 0) {\r\n      currentTokens.push({\r\n        name: 'tAPT (Tortuga)',\r\n        protocol: 'tortuga',\r\n        type: 'staking',\r\n        percentage: ((tAPT.valueUSD / totalValueUSD) * 100).toFixed(2),\r\n        amount: tAPT.amount,\r\n        valueUSD: tAPT.valueUSD\r\n      });\r\n    }\r\n    \r\n    // Staked APT - Ditto\r\n    if (dAPT && parseFloat(dAPT.amount) > 0) {\r\n      currentTokens.push({\r\n        name: 'dAPT (Ditto)',\r\n        protocol: 'ditto',\r\n        type: 'staking',\r\n        percentage: ((dAPT.valueUSD / totalValueUSD) * 100).toFixed(2),\r\n        amount: dAPT.amount,\r\n        valueUSD: dAPT.valueUSD\r\n      });\r\n    }\r\n    \r\n    // AMM Liquidity\r\n    if (ammLiquidity && ammLiquidity.hasLiquidity) {\r\n      currentTokens.push({\r\n        name: 'AMM Liquidity',\r\n        protocol: 'liquidity',\r\n        type: 'amm',\r\n        percentage: ((ammLiquidity.estimatedValueUSD / totalValueUSD) * 100).toFixed(2),\r\n        amount: ammLiquidity.estimatedValueUSD / (apt?.valueUSD / parseFloat(apt?.amount)),\r\n        valueUSD: ammLiquidity.estimatedValueUSD\r\n      });\r\n    }\r\n    \r\n    setCurrentAllocation(currentTokens);\r\n  }, [portfolioData]);\r\n  \r\n  // Get recommended allocation from staking data\r\n  useEffect(() => {\r\n    if (!stakingData || !stakingData.strategies) return;\r\n    \r\n    // Default to balanced strategy\r\n    const recommendedStrategy = stakingData.strategies.balanced || \r\n                              Object.values(stakingData.strategies)[0];\r\n    \r\n    if (!recommendedStrategy || !recommendedStrategy.allocation) return;\r\n    \r\n    // Calculate value for each recommended allocation based on current portfolio value\r\n    const totalValue = portfolioData?.totalValueUSD || 0;\r\n    const aptPrice = portfolioData?.apt?.valueUSD / parseFloat(portfolioData?.apt?.amount || 1);\r\n    \r\n    const recommendedItems = recommendedStrategy.allocation.map(item => {\r\n      const protocolData = stakingData.protocols[item.protocol];\r\n      const productType = item.type || 'staking';\r\n      \r\n      return {\r\n        name: protocolData?.[productType]?.product || \r\n              `${item.protocol.charAt(0).toUpperCase() + item.protocol.slice(1)} (${productType})`,\r\n        protocol: item.protocol,\r\n        type: productType,\r\n        percentage: item.percentage,\r\n        amount: totalValue > 0 ? ((item.percentage / 100) * (totalValue / aptPrice)).toFixed(2) : 0,\r\n        valueUSD: totalValue > 0 ? ((item.percentage / 100) * totalValue).toFixed(2) : 0\r\n      };\r\n    });\r\n    \r\n    setRecommendedAllocation(recommendedItems);\r\n  }, [stakingData, portfolioData]);\r\n  \r\n  // Calculate drift between current and recommended allocations\r\n  useEffect(() => {\r\n    if (currentAllocation.length === 0 || recommendedAllocation.length === 0) {\r\n      setDriftAnalysis(null);\r\n      return;\r\n    }\r\n    \r\n    const analysis = calculateDrift(currentAllocation, recommendedAllocation);\r\n    setDriftAnalysis(analysis);\r\n  }, [currentAllocation, recommendedAllocation]);\r\n  \r\n  // Helper function to calculate drift\r\n  const calculateDrift = (current, recommended) => {\r\n    const drifts = [];\r\n    let maxDrift = 0;\r\n    let totalDrift = 0;\r\n    \r\n    // Create map of recommended allocations by protocol\r\n    const recommendedMap = recommended.reduce((map, item) => {\r\n      map[item.protocol] = item;\r\n      return map;\r\n    }, {});\r\n    \r\n    // Calculate drift for each current position\r\n    current.forEach(item => {\r\n      const recommendedItem = recommendedMap[item.protocol];\r\n      \r\n      if (recommendedItem) {\r\n        // Protocol exists in both current and recommended\r\n        const currentPct = parseFloat(item.percentage);\r\n        const targetPct = parseFloat(recommendedItem.percentage);\r\n        const drift = Math.abs(currentPct - targetPct);\r\n        \r\n        drifts.push({\r\n          protocol: item.protocol,\r\n          name: item.name,\r\n          current: currentPct,\r\n          target: targetPct,\r\n          drift,\r\n          action: currentPct > targetPct ? 'decrease' : 'increase'\r\n        });\r\n        \r\n        maxDrift = Math.max(maxDrift, drift);\r\n        totalDrift += drift;\r\n        \r\n        // Remove from map to track protocols in recommended but not in current\r\n        delete recommendedMap[item.protocol];\r\n      } else {\r\n        // Current protocol not in recommended - should be fully removed\r\n        drifts.push({\r\n          protocol: item.protocol,\r\n          name: item.name,\r\n          current: parseFloat(item.percentage),\r\n          target: 0,\r\n          drift: parseFloat(item.percentage),\r\n          action: 'remove'\r\n        });\r\n        \r\n        maxDrift = Math.max(maxDrift, parseFloat(item.percentage));\r\n        totalDrift += parseFloat(item.percentage);\r\n      }\r\n    });\r\n    \r\n    // Add protocols that are in recommended but not in current\r\n    for (const [protocol, item] of Object.entries(recommendedMap)) {\r\n      drifts.push({\r\n        protocol,\r\n        name: item.name,\r\n        current: 0,\r\n        target: parseFloat(item.percentage),\r\n        drift: parseFloat(item.percentage),\r\n        action: 'add'\r\n      });\r\n      \r\n      maxDrift = Math.max(maxDrift, parseFloat(item.percentage));\r\n      totalDrift += parseFloat(item.percentage);\r\n    }\r\n    \r\n    // Sort by drift amount (largest first)\r\n    drifts.sort((a, b) => b.drift - a.drift);\r\n    \r\n    const avgDrift = drifts.length > 0 ? totalDrift / drifts.length : 0;\r\n    const DEFAULT_THRESHOLD = 5; // 5% default threshold\r\n    \r\n    return {\r\n      drifts,\r\n      maxDrift,\r\n      avgDrift,\r\n      totalDrift,\r\n      needsRebalance: maxDrift >= DEFAULT_THRESHOLD,\r\n      threshold: DEFAULT_THRESHOLD\r\n    };\r\n  };\r\n  \r\n  // Determine if there's anything to rebalance\r\n  const needsRebalance = useMemo(() => {\r\n    return driftAnalysis?.needsRebalance || false;\r\n  }, [driftAnalysis]);\r\n  \r\n  return (\r\n    <div className=\"bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-700\">\r\n      <h2 className=\"text-xl font-bold text-white mb-4\">Portfolio Balance Analysis</h2>\r\n      \r\n      {(!portfolioData || !currentAllocation.length) ? (\r\n        <div className=\"text-center py-6\">\r\n          <p className=\"text-gray-400\">Connect your wallet to view portfolio balance</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n            {/* Current Allocation */}\r\n            <div>\r\n              <h3 className=\"text-md font-medium text-gray-300 mb-3\">Current Allocation</h3>\r\n              <div className=\"space-y-2\">\r\n                {currentAllocation.map((item, index) => (\r\n                  <div key={index} className=\"flex justify-between items-center\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className={`w-3 h-3 rounded-full mr-2 ${getColorForProtocol(item.protocol)}`}></div>\r\n                      <span className=\"text-white\">{item.name}</span>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className=\"text-white\">{item.percentage}%</div>\r\n                      <div className=\"text-gray-500 text-xs\">{item.amount} APT</div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Recommended Allocation */}\r\n            <div>\r\n              <h3 className=\"text-md font-medium text-gray-300 mb-3\">Recommended Allocation</h3>\r\n              <div className=\"space-y-2\">\r\n                {recommendedAllocation.map((item, index) => (\r\n                  <div key={index} className=\"flex justify-between items-center\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className={`w-3 h-3 rounded-full mr-2 ${getColorForProtocol(item.protocol)}`}></div>\r\n                      <span className=\"text-white\">{item.name}</span>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className=\"text-white\">{item.percentage}%</div>\r\n                      <div className=\"text-gray-500 text-xs\">{item.amount} APT</div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Drift Analysis */}\r\n          {driftAnalysis && (\r\n            <div className=\"mt-4 border-t border-gray-700 pt-4\">\r\n              <div className=\"flex justify-between items-center mb-3\">\r\n                <h3 className=\"text-md font-medium text-gray-300\">Drift Analysis</h3>\r\n                <div className={`px-2 py-1 rounded-md text-xs font-medium ${\r\n                  needsRebalance ? 'bg-red-900/50 text-red-400' : 'bg-green-900/50 text-green-400'\r\n                }`}>\r\n                  {needsRebalance ? 'Rebalance Recommended' : 'Portfolio Balanced'}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mt-2 space-y-2\">\r\n                {driftAnalysis.drifts.map((drift, index) => (\r\n                  <div key={index} className=\"flex justify-between items-center\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className={`w-3 h-3 rounded-full mr-2 ${getColorForProtocol(drift.protocol)}`}></div>\r\n                      <span className=\"text-white\">{drift.name}</span>\r\n                      <span className={`ml-2 text-xs px-1.5 py-0.5 rounded ${\r\n                        drift.action === 'increase' ? 'bg-blue-900/50 text-blue-400' :\r\n                        drift.action === 'decrease' ? 'bg-yellow-900/50 text-yellow-400' :\r\n                        drift.action === 'add' ? 'bg-green-900/50 text-green-400' :\r\n                        'bg-red-900/50 text-red-400'\r\n                      }`}>\r\n                        {drift.action}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className=\"flex items-center text-white\">\r\n                        {drift.current}% \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mx-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n                        </svg>\r\n                        {drift.target}%\r\n                      </div>\r\n                      <div className=\"text-gray-500 text-xs\">Drift: {drift.drift.toFixed(2)}%</div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"mt-4 pt-3 border-t border-gray-700 flex justify-between items-center\">\r\n                <div>\r\n                  <span className=\"text-gray-400\">Maximum drift:</span>\r\n                  <span className={`ml-2 font-medium ${needsRebalance ? 'text-red-400' : 'text-green-400'}`}>\r\n                    {driftAnalysis.maxDrift.toFixed(2)}%\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-gray-400\">Threshold:</span>\r\n                  <span className=\"ml-2 font-medium text-white\">{driftAnalysis.threshold}%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to get color for protocol\r\nconst getColorForProtocol = (protocol) => {\r\n  const colorMap = {\r\n    native: 'bg-gray-400',\r\n    amnis: 'bg-blue-500',\r\n    thala: 'bg-green-500',\r\n    tortuga: 'bg-purple-500',\r\n    ditto: 'bg-yellow-500',\r\n    liquidity: 'bg-red-500',\r\n    cetus: 'bg-pink-500',\r\n    pancakeswap: 'bg-indigo-500',\r\n    echo: 'bg-cyan-500',\r\n    aries: 'bg-teal-500'\r\n  };\r\n  \r\n  return colorMap[protocol] || 'bg-gray-500';\r\n};\r\n\r\nexport default PortfolioBalance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}