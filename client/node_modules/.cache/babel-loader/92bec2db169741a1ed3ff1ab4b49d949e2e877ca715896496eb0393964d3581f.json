{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';// Define available themes\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const THEMES={LIGHT:'light',DARK:'dark',SYSTEM:'system'};// Create the context\nexport const ThemeContext=/*#__PURE__*/createContext(null);export const ThemeProvider=_ref=>{let{children}=_ref;// State to track the selected theme preference\nconst[themePreference,setThemePreference]=useState(THEMES.SYSTEM);// State to track the actual theme that's applied (light or dark)\nconst[activeTheme,setActiveTheme]=useState(THEMES.LIGHT);// Update active theme based on preference and system setting\nuseEffect(()=>{// Load theme preference from localStorage\nconst savedTheme=localStorage.getItem('theme');if(savedTheme&&Object.values(THEMES).includes(savedTheme)){setThemePreference(savedTheme);}// Function to set the active theme\nconst updateActiveTheme=()=>{if(themePreference===THEMES.SYSTEM){// Use system preference\nconst prefersDark=window.matchMedia('(prefers-color-scheme: dark)').matches;setActiveTheme(prefersDark?THEMES.DARK:THEMES.LIGHT);}else{// Use explicitly selected theme\nsetActiveTheme(themePreference);}};// Initial update\nupdateActiveTheme();// Listen for system theme changes\nconst mediaQuery=window.matchMedia('(prefers-color-scheme: dark)');const handleChange=()=>{if(themePreference===THEMES.SYSTEM){updateActiveTheme();}};// Add listener for modern browsers\nif(mediaQuery.addEventListener){mediaQuery.addEventListener('change',handleChange);}else{// Fallback for older browsers\nmediaQuery.addListener(handleChange);}// Apply theme to document\ndocument.documentElement.setAttribute('data-theme',activeTheme);if(activeTheme===THEMES.DARK){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}// Cleanup function\nreturn()=>{if(mediaQuery.removeEventListener){mediaQuery.removeEventListener('change',handleChange);}else{mediaQuery.removeListener(handleChange);}};},[themePreference,activeTheme]);// Function to update theme preference\nconst setTheme=theme=>{if(Object.values(THEMES).includes(theme)){setThemePreference(theme);localStorage.setItem('theme',theme);}};// Context value\nconst value={themePreference,activeTheme,setTheme,isLightMode:activeTheme===THEMES.LIGHT,isDarkMode:activeTheme===THEMES.DARK};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};// Custom hook to use the theme context\nexport const useTheme=()=>{const context=React.useContext(ThemeContext);if(context===null){throw new Error('useTheme must be used within a ThemeProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","THEMES","LIGHT","DARK","SYSTEM","ThemeContext","ThemeProvider","_ref","children","themePreference","setThemePreference","activeTheme","setActiveTheme","savedTheme","localStorage","getItem","Object","values","includes","updateActiveTheme","prefersDark","window","matchMedia","matches","mediaQuery","handleChange","addEventListener","addListener","document","documentElement","setAttribute","classList","add","remove","removeEventListener","removeListener","setTheme","theme","setItem","value","isLightMode","isDarkMode","Provider","useTheme","context","useContext","Error"],"sources":["/home/ck/compoundefi/client/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Define available themes\r\nexport const THEMES = {\r\n  LIGHT: 'light',\r\n  DARK: 'dark',\r\n  SYSTEM: 'system'\r\n};\r\n\r\n// Create the context\r\nexport const ThemeContext = createContext(null);\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // State to track the selected theme preference\r\n  const [themePreference, setThemePreference] = useState(THEMES.SYSTEM);\r\n  \r\n  // State to track the actual theme that's applied (light or dark)\r\n  const [activeTheme, setActiveTheme] = useState(THEMES.LIGHT);\r\n\r\n  // Update active theme based on preference and system setting\r\n  useEffect(() => {\r\n    // Load theme preference from localStorage\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme && Object.values(THEMES).includes(savedTheme)) {\r\n      setThemePreference(savedTheme);\r\n    }\r\n    \r\n    // Function to set the active theme\r\n    const updateActiveTheme = () => {\r\n      if (themePreference === THEMES.SYSTEM) {\r\n        // Use system preference\r\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n        setActiveTheme(prefersDark ? THEMES.DARK : THEMES.LIGHT);\r\n      } else {\r\n        // Use explicitly selected theme\r\n        setActiveTheme(themePreference);\r\n      }\r\n    };\r\n    \r\n    // Initial update\r\n    updateActiveTheme();\r\n    \r\n    // Listen for system theme changes\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const handleChange = () => {\r\n      if (themePreference === THEMES.SYSTEM) {\r\n        updateActiveTheme();\r\n      }\r\n    };\r\n    \r\n    // Add listener for modern browsers\r\n    if (mediaQuery.addEventListener) {\r\n      mediaQuery.addEventListener('change', handleChange);\r\n    } else {\r\n      // Fallback for older browsers\r\n      mediaQuery.addListener(handleChange);\r\n    }\r\n    \r\n    // Apply theme to document\r\n    document.documentElement.setAttribute('data-theme', activeTheme);\r\n    \r\n    if (activeTheme === THEMES.DARK) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      if (mediaQuery.removeEventListener) {\r\n        mediaQuery.removeEventListener('change', handleChange);\r\n      } else {\r\n        mediaQuery.removeListener(handleChange);\r\n      }\r\n    };\r\n  }, [themePreference, activeTheme]);\r\n\r\n  // Function to update theme preference\r\n  const setTheme = (theme) => {\r\n    if (Object.values(THEMES).includes(theme)) {\r\n      setThemePreference(theme);\r\n      localStorage.setItem('theme', theme);\r\n    }\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    themePreference,\r\n    activeTheme,\r\n    setTheme,\r\n    isLightMode: activeTheme === THEMES.LIGHT,\r\n    isDarkMode: activeTheme === THEMES.DARK\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the theme context\r\nexport const useTheme = () => {\r\n  const context = React.useContext(ThemeContext);\r\n  if (context === null) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}