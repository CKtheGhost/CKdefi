{"ast":null,"code":"var _jsxFileName = \"/home/ck/compoundefi/client/src/components/wallet/PerformanceChart.jsx\",\n  _s = $RefreshSig$();\n// src/components/wallet/PerformanceChart.jsx\n\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerformanceChart = ({\n  portfolioData\n}) => {\n  _s();\n  var _portfolioData$perfor, _portfolioData$perfor2, _portfolioData$perfor3, _portfolioData$perfor4, _portfolioData$perfor5, _portfolioData$perfor6, _portfolioData$perfor7, _portfolioData$perfor8, _portfolioData$perfor9;\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    if (!portfolioData || !chartRef.current) return;\n\n    // Cleanup previous chart if it exists\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    // Check if we have historical data\n    const historicalData = portfolioData.historicalData || {\n      timestamps: [],\n      values: [],\n      apy: []\n    };\n\n    // If no historical data, create dummy data for display purposes\n    let labels = historicalData.timestamps;\n    let values = historicalData.values;\n    let apy = historicalData.apy;\n    if (!labels.length) {\n      // Generate 30 days of dummy data\n      labels = Array.from({\n        length: 30\n      }, (_, i) => {\n        const date = new Date();\n        date.setDate(date.getDate() - (30 - i - 1));\n        return date.toISOString().split('T')[0];\n      });\n\n      // Generate dummy portfolio value data (starting at current value)\n      const currentValue = parseFloat(portfolioData.totalValueUSD || 100);\n      values = [currentValue * 0.9];\n      for (let i = 1; i < 30; i++) {\n        const change = Math.random() * 0.04 - 0.015; // -1.5% to +2.5%\n        values.push(Number((values[i - 1] * (1 + change)).toFixed(2)));\n      }\n\n      // Generate dummy APY data\n      apy = Array.from({\n        length: 30\n      }, () => (Math.random() * 2 + 7).toFixed(2));\n    }\n    const ctx = chartRef.current.getContext('2d');\n\n    // Create chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Portfolio Value ($)',\n          data: values,\n          borderColor: '#3b82f6',\n          // blue-500\n          backgroundColor: 'rgba(59, 130, 246, 0.1)',\n          tension: 0.3,\n          fill: true,\n          yAxisID: 'y'\n        }, {\n          label: 'APY (%)',\n          data: apy,\n          borderColor: '#10b981',\n          // green-500\n          backgroundColor: 'transparent',\n          borderDash: [5, 5],\n          tension: 0.3,\n          yAxisID: 'y1'\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n          mode: 'index',\n          intersect: false\n        },\n        plugins: {\n          legend: {\n            position: 'top',\n            labels: {\n              color: 'rgba(255, 255, 255, 0.8)',\n              font: {\n                size: 12\n              },\n              padding: 20\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                if (context.datasetIndex === 0) {\n                  return `Value: $${context.raw.toLocaleString()}`;\n                } else {\n                  return `APY: ${context.raw}%`;\n                }\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)'\n            },\n            ticks: {\n              color: 'rgba(255, 255, 255, 0.7)'\n            }\n          },\n          y: {\n            type: 'linear',\n            display: true,\n            position: 'left',\n            title: {\n              display: true,\n              text: 'Portfolio Value ($)',\n              color: 'rgba(255, 255, 255, 0.7)'\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)'\n            },\n            ticks: {\n              color: 'rgba(255, 255, 255, 0.7)'\n            }\n          },\n          y1: {\n            type: 'linear',\n            display: true,\n            position: 'right',\n            grid: {\n              drawOnChartArea: false\n            },\n            title: {\n              display: true,\n              text: 'APY (%)',\n              color: 'rgba(255, 255, 255, 0.7)'\n            },\n            ticks: {\n              color: 'rgba(255, 255, 255, 0.7)',\n              callback: function (value) {\n                return value + '%';\n              }\n            }\n          }\n        }\n      }\n    });\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [portfolioData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 rounded-lg shadow-lg p-6 mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-white mb-4\",\n      children: \"Performance History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative h-80\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        id: \"performance-chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 grid grid-cols-3 gap-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400\",\n          children: \"Daily Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-lg font-bold ${parseFloat((portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$perfor = portfolioData.performance) === null || _portfolioData$perfor === void 0 ? void 0 : _portfolioData$perfor.dailyChange) || 0) >= 0 ? 'text-green-500' : 'text-red-500'}`,\n          children: [parseFloat((portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$perfor2 = portfolioData.performance) === null || _portfolioData$perfor2 === void 0 ? void 0 : _portfolioData$perfor2.dailyChange) || 0) >= 0 ? '+' : '', (portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$perfor3 = portfolioData.performance) === null || _portfolioData$perfor3 === void 0 ? void 0 : _portfolioData$perfor3.dailyChange) || '0.00', \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400\",\n          children: \"Weekly Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-lg font-bold ${parseFloat((portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$perfor4 = portfolioData.performance) === null || _portfolioData$perfor4 === void 0 ? void 0 : _portfolioData$perfor4.weeklyChange) || 0) >= 0 ? 'text-green-500' : 'text-red-500'}`,\n          children: [parseFloat((portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$perfor5 = portfolioData.performance) === null || _portfolioData$perfor5 === void 0 ? void 0 : _portfolioData$perfor5.weeklyChange) || 0) >= 0 ? '+' : '', (portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$perfor6 = portfolioData.performance) === null || _portfolioData$perfor6 === void 0 ? void 0 : _portfolioData$perfor6.weeklyChange) || '0.00', \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400\",\n          children: \"Monthly Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-lg font-bold ${parseFloat((portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$perfor7 = portfolioData.performance) === null || _portfolioData$perfor7 === void 0 ? void 0 : _portfolioData$perfor7.monthlyChange) || 0) >= 0 ? 'text-green-500' : 'text-red-500'}`,\n          children: [parseFloat((portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$perfor8 = portfolioData.performance) === null || _portfolioData$perfor8 === void 0 ? void 0 : _portfolioData$perfor8.monthlyChange) || 0) >= 0 ? '+' : '', (portfolioData === null || portfolioData === void 0 ? void 0 : (_portfolioData$perfor9 = portfolioData.performance) === null || _portfolioData$perfor9 === void 0 ? void 0 : _portfolioData$perfor9.monthlyChange) || '0.00', \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 4\n  }, this);\n};\n_s(PerformanceChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = PerformanceChart;\nexport default PerformanceChart;\nvar _c;\n$RefreshReg$(_c, \"PerformanceChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","PerformanceChart","portfolioData","_s","_portfolioData$perfor","_portfolioData$perfor2","_portfolioData$perfor3","_portfolioData$perfor4","_portfolioData$perfor5","_portfolioData$perfor6","_portfolioData$perfor7","_portfolioData$perfor8","_portfolioData$perfor9","chartRef","chartInstance","current","destroy","historicalData","timestamps","values","apy","labels","length","Array","from","_","i","date","Date","setDate","getDate","toISOString","split","currentValue","parseFloat","totalValueUSD","change","Math","random","push","Number","toFixed","ctx","getContext","type","data","datasets","label","borderColor","backgroundColor","tension","fill","yAxisID","borderDash","options","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","legend","position","color","font","size","padding","tooltip","callbacks","context","datasetIndex","raw","toLocaleString","scales","x","grid","ticks","y","display","title","text","y1","drawOnChartArea","callback","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","performance","dailyChange","weeklyChange","monthlyChange","_c","$RefreshReg$"],"sources":["/home/ck/compoundefi/client/src/components/wallet/PerformanceChart.jsx"],"sourcesContent":["// src/components/wallet/PerformanceChart.jsx\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst PerformanceChart = ({ portfolioData }) => {\r\n const chartRef = useRef(null);\r\n const chartInstance = useRef(null);\r\n \r\n useEffect(() => {\r\n   if (!portfolioData || !chartRef.current) return;\r\n   \r\n   // Cleanup previous chart if it exists\r\n   if (chartInstance.current) {\r\n     chartInstance.current.destroy();\r\n   }\r\n   \r\n   // Check if we have historical data\r\n   const historicalData = portfolioData.historicalData || {\r\n     timestamps: [],\r\n     values: [],\r\n     apy: []\r\n   };\r\n   \r\n   // If no historical data, create dummy data for display purposes\r\n   let labels = historicalData.timestamps;\r\n   let values = historicalData.values;\r\n   let apy = historicalData.apy;\r\n   \r\n   if (!labels.length) {\r\n     // Generate 30 days of dummy data\r\n     labels = Array.from({ length: 30 }, (_, i) => {\r\n       const date = new Date();\r\n       date.setDate(date.getDate() - (30 - i - 1));\r\n       return date.toISOString().split('T')[0];\r\n     });\r\n     \r\n     // Generate dummy portfolio value data (starting at current value)\r\n     const currentValue = parseFloat(portfolioData.totalValueUSD || 100);\r\n     values = [currentValue * 0.9];\r\n     for (let i = 1; i < 30; i++) {\r\n       const change = ((Math.random() * 0.04) - 0.015); // -1.5% to +2.5%\r\n       values.push(Number((values[i-1] * (1 + change)).toFixed(2)));\r\n     }\r\n     \r\n     // Generate dummy APY data\r\n     apy = Array.from({ length: 30 }, () => (Math.random() * 2 + 7).toFixed(2));\r\n   }\r\n   \r\n   const ctx = chartRef.current.getContext('2d');\r\n   \r\n   // Create chart\r\n   chartInstance.current = new Chart(ctx, {\r\n     type: 'line',\r\n     data: {\r\n       labels,\r\n       datasets: [\r\n         {\r\n           label: 'Portfolio Value ($)',\r\n           data: values,\r\n           borderColor: '#3b82f6', // blue-500\r\n           backgroundColor: 'rgba(59, 130, 246, 0.1)',\r\n           tension: 0.3,\r\n           fill: true,\r\n           yAxisID: 'y'\r\n         },\r\n         {\r\n           label: 'APY (%)',\r\n           data: apy,\r\n           borderColor: '#10b981', // green-500\r\n           backgroundColor: 'transparent',\r\n           borderDash: [5, 5],\r\n           tension: 0.3,\r\n           yAxisID: 'y1'\r\n         }\r\n       ]\r\n     },\r\n     options: {\r\n       responsive: true,\r\n       maintainAspectRatio: false,\r\n       interaction: {\r\n         mode: 'index',\r\n         intersect: false,\r\n       },\r\n       plugins: {\r\n         legend: {\r\n           position: 'top',\r\n           labels: {\r\n             color: 'rgba(255, 255, 255, 0.8)',\r\n             font: {\r\n               size: 12\r\n             },\r\n             padding: 20\r\n           }\r\n         },\r\n         tooltip: {\r\n           callbacks: {\r\n             label: function(context) {\r\n               if (context.datasetIndex === 0) {\r\n                 return `Value: $${context.raw.toLocaleString()}`;\r\n               } else {\r\n                 return `APY: ${context.raw}%`;\r\n               }\r\n             }\r\n           }\r\n         }\r\n       },\r\n       scales: {\r\n         x: {\r\n           grid: {\r\n             color: 'rgba(255, 255, 255, 0.1)'\r\n           },\r\n           ticks: {\r\n             color: 'rgba(255, 255, 255, 0.7)'\r\n           }\r\n         },\r\n         y: {\r\n           type: 'linear',\r\n           display: true,\r\n           position: 'left',\r\n           title: {\r\n             display: true,\r\n             text: 'Portfolio Value ($)',\r\n             color: 'rgba(255, 255, 255, 0.7)'\r\n           },\r\n           grid: {\r\n             color: 'rgba(255, 255, 255, 0.1)'\r\n           },\r\n           ticks: {\r\n             color: 'rgba(255, 255, 255, 0.7)'\r\n           }\r\n         },\r\n         y1: {\r\n           type: 'linear',\r\n           display: true,\r\n           position: 'right',\r\n           grid: {\r\n             drawOnChartArea: false\r\n           },\r\n           title: {\r\n             display: true,\r\n             text: 'APY (%)',\r\n             color: 'rgba(255, 255, 255, 0.7)'\r\n           },\r\n           ticks: {\r\n             color: 'rgba(255, 255, 255, 0.7)',\r\n             callback: function(value) {\r\n               return value + '%';\r\n             }\r\n           }\r\n         }\r\n       }\r\n     }\r\n   });\r\n   \r\n   return () => {\r\n     if (chartInstance.current) {\r\n       chartInstance.current.destroy();\r\n     }\r\n   };\r\n }, [portfolioData]);\r\n \r\n return (\r\n   <div className=\"bg-gray-800 rounded-lg shadow-lg p-6 mb-6\">\r\n     <h3 className=\"text-lg font-semibold text-white mb-4\">Performance History</h3>\r\n     <div className=\"relative h-80\">\r\n       <canvas ref={chartRef} id=\"performance-chart\"></canvas>\r\n     </div>\r\n     <div className=\"mt-4 grid grid-cols-3 gap-4 text-center\">\r\n       <div>\r\n         <p className=\"text-sm text-gray-400\">Daily Change</p>\r\n         <p className={`text-lg font-bold ${parseFloat(portfolioData?.performance?.dailyChange || 0) >= 0 ? 'text-green-500' : 'text-red-500'}`}>\r\n           {parseFloat(portfolioData?.performance?.dailyChange || 0) >= 0 ? '+' : ''}{portfolioData?.performance?.dailyChange || '0.00'}%\r\n         </p>\r\n       </div>\r\n       <div>\r\n         <p className=\"text-sm text-gray-400\">Weekly Change</p>\r\n         <p className={`text-lg font-bold ${parseFloat(portfolioData?.performance?.weeklyChange || 0) >= 0 ? 'text-green-500' : 'text-red-500'}`}>\r\n           {parseFloat(portfolioData?.performance?.weeklyChange || 0) >= 0 ? '+' : ''}{portfolioData?.performance?.weeklyChange || '0.00'}%\r\n         </p>\r\n       </div>\r\n       <div>\r\n         <p className=\"text-sm text-gray-400\">Monthly Change</p>\r\n         <p className={`text-lg font-bold ${parseFloat(portfolioData?.performance?.monthlyChange || 0) >= 0 ? 'text-green-500' : 'text-red-500'}`}>\r\n           {parseFloat(portfolioData?.performance?.monthlyChange || 0) >= 0 ? '+' : ''}{portfolioData?.performance?.monthlyChange || '0.00'}%\r\n         </p>\r\n       </div>\r\n     </div>\r\n   </div>\r\n );\r\n};\r\n\r\nexport default PerformanceChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}