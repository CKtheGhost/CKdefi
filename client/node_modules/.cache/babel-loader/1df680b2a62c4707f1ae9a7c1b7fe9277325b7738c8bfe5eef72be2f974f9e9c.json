{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useMarketData.js\nimport { useState, useCallback, useEffect } from 'react';\nimport api from '../services/api';\nconst useMarketData = () => {\n  _s();\n  const [stakingData, setStakingData] = useState(null);\n  const [marketData, setMarketData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch market data including protocols, staking rates, etc.\n  const fetchMarketData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Fetch staking data\n      const stakingResponse = await api.get('/market/staking');\n      setStakingData(stakingResponse.data);\n\n      // Fetch token market data\n      const marketResponse = await api.get('/market/tokens');\n      setMarketData(marketResponse.data);\n      return {\n        stakingData: stakingResponse.data,\n        marketData: marketResponse.data\n      };\n    } catch (err) {\n      console.error('Error fetching market data:', err);\n      setError(err.message || 'Failed to fetch market data');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchMarketData();\n  }, [fetchMarketData]);\n  return {\n    stakingData,\n    marketData,\n    loading,\n    error,\n    fetchMarketData\n  };\n};\n_s(useMarketData, \"2GIv5YDZAt1iCJXPqSIva0HIsUU=\");\nexport default useMarketData;\nexport { useMarketData };","map":{"version":3,"names":["useState","useCallback","useEffect","api","useMarketData","_s","stakingData","setStakingData","marketData","setMarketData","loading","setLoading","error","setError","fetchMarketData","stakingResponse","get","data","marketResponse","err","console","message"],"sources":["/home/ck/compoundefi/client/src/hooks/useMarketData.js"],"sourcesContent":["// src/hooks/useMarketData.js\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst useMarketData = () => {\r\n  const [stakingData, setStakingData] = useState(null);\r\n  const [marketData, setMarketData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch market data including protocols, staking rates, etc.\r\n  const fetchMarketData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Fetch staking data\r\n      const stakingResponse = await api.get('/market/staking');\r\n      setStakingData(stakingResponse.data);\r\n      \r\n      // Fetch token market data\r\n      const marketResponse = await api.get('/market/tokens');\r\n      setMarketData(marketResponse.data);\r\n      \r\n      return {\r\n        stakingData: stakingResponse.data,\r\n        marketData: marketResponse.data\r\n      };\r\n    } catch (err) {\r\n      console.error('Error fetching market data:', err);\r\n      setError(err.message || 'Failed to fetch market data');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch data on component mount\r\n  useEffect(() => {\r\n    fetchMarketData();\r\n  }, [fetchMarketData]);\r\n\r\n  return {\r\n    stakingData,\r\n    marketData,\r\n    loading,\r\n    error,\r\n    fetchMarketData\r\n  };\r\n};\r\n\r\nexport default useMarketData;\r\nexport { useMarketData };"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACxD,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMc,eAAe,GAAGb,WAAW,CAAC,YAAY;IAC9CU,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAME,eAAe,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,iBAAiB,CAAC;MACxDT,cAAc,CAACQ,eAAe,CAACE,IAAI,CAAC;;MAEpC;MACA,MAAMC,cAAc,GAAG,MAAMf,GAAG,CAACa,GAAG,CAAC,gBAAgB,CAAC;MACtDP,aAAa,CAACS,cAAc,CAACD,IAAI,CAAC;MAElC,OAAO;QACLX,WAAW,EAAES,eAAe,CAACE,IAAI;QACjCT,UAAU,EAAEU,cAAc,CAACD;MAC7B,CAAC;IACH,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACR,KAAK,CAAC,6BAA6B,EAAEO,GAAG,CAAC;MACjDN,QAAQ,CAACM,GAAG,CAACE,OAAO,IAAI,6BAA6B,CAAC;MACtD,OAAO,IAAI;IACb,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAT,SAAS,CAAC,MAAM;IACdY,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,OAAO;IACLR,WAAW;IACXE,UAAU;IACVE,OAAO;IACPE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAACT,EAAA,CA7CID,aAAa;AA+CnB,eAAeA,aAAa;AAC5B,SAASA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}