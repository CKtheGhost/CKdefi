{"ast":null,"code":"var _jsxFileName = \"/home/ck/compoundefi/client/src/context/NotificationContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Nexus-level NotificationContext.jsx\n// Maintains the original notification system, with robust logging and fallback checks.\n\nimport React, { createContext, useState, useCallback, useContext } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotificationContext = /*#__PURE__*/createContext();\n\n// Provider with advanced dismissal logic\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const dismissNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n  }, []);\n  const showNotification = useCallback(notification => {\n    var _notification$timeout;\n    // If no message provided, fallback\n    if (!(notification !== null && notification !== void 0 && notification.message)) {\n      console.warn('[NotificationProvider] Attempted to show notification without message.');\n      return null;\n    }\n    const id = Date.now();\n    const newNotification = {\n      id,\n      ...notification,\n      createdAt: new Date()\n    };\n    setNotifications(prev => [...prev, newNotification]);\n    const timeout = (_notification$timeout = notification.timeout) !== null && _notification$timeout !== void 0 ? _notification$timeout : 5000;\n    if (timeout > 0) {\n      setTimeout(() => {\n        dismissNotification(id);\n      }, timeout);\n    }\n    return id;\n  }, [dismissNotification]);\n  const clearAllNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n  const value = {\n    notifications,\n    showNotification,\n    dismissNotification,\n    clearAllNotifications\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook for usage\n_s(NotificationProvider, \"+6Vh4DZxQ9V9W+Qu8DBDBekfWEw=\");\n_c = NotificationProvider;\nexport const useNotification = () => {\n  _s2();\n  const ctx = useContext(NotificationContext);\n  if (!ctx) {\n    throw new Error('[useNotification] must be used within a NotificationProvider.');\n  }\n  return ctx;\n};\n_s2(useNotification, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nexport default NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useState","useCallback","useContext","jsxDEV","_jsxDEV","NotificationContext","NotificationProvider","children","_s","notifications","setNotifications","dismissNotification","id","prev","filter","n","showNotification","notification","_notification$timeout","message","console","warn","Date","now","newNotification","createdAt","timeout","setTimeout","clearAllNotifications","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNotification","_s2","ctx","Error","$RefreshReg$"],"sources":["/home/ck/compoundefi/client/src/context/NotificationContext.jsx"],"sourcesContent":["// Nexus-level NotificationContext.jsx\r\n// Maintains the original notification system, with robust logging and fallback checks.\r\n\r\nimport React, { createContext, useState, useCallback, useContext } from 'react';\r\n\r\n// Create the context\r\nexport const NotificationContext = createContext();\r\n\r\n// Provider with advanced dismissal logic\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  const dismissNotification = useCallback((id) => {\r\n    setNotifications((prev) => prev.filter((n) => n.id !== id));\r\n  }, []);\r\n\r\n  const showNotification = useCallback(\r\n    (notification) => {\r\n      // If no message provided, fallback\r\n      if (!notification?.message) {\r\n        console.warn('[NotificationProvider] Attempted to show notification without message.');\r\n        return null;\r\n      }\r\n\r\n      const id = Date.now();\r\n      const newNotification = {\r\n        id,\r\n        ...notification,\r\n        createdAt: new Date(),\r\n      };\r\n\r\n      setNotifications((prev) => [...prev, newNotification]);\r\n\r\n      const timeout = notification.timeout ?? 5000;\r\n      if (timeout > 0) {\r\n        setTimeout(() => {\r\n          dismissNotification(id);\r\n        }, timeout);\r\n      }\r\n      return id;\r\n    },\r\n    [dismissNotification]\r\n  );\r\n\r\n  const clearAllNotifications = useCallback(() => {\r\n    setNotifications([]);\r\n  }, []);\r\n\r\n  const value = {\r\n    notifications,\r\n    showNotification,\r\n    dismissNotification,\r\n    clearAllNotifications,\r\n  };\r\n\r\n  return <NotificationContext.Provider value={value}>{children}</NotificationContext.Provider>;\r\n};\r\n\r\n// Custom hook for usage\r\nexport const useNotification = () => {\r\n  const ctx = useContext(NotificationContext);\r\n  if (!ctx) {\r\n    throw new Error('[useNotification] must be used within a NotificationProvider.');\r\n  }\r\n  return ctx;\r\n};\r\n\r\nexport default NotificationProvider;\r\n"],"mappings":";;;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;;AAE/E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,mBAAmB,gBAAGN,aAAa,CAAC,CAAC;;AAElD;AACA,OAAO,MAAMO,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,mBAAmB,GAAGV,WAAW,CAAEW,EAAE,IAAK;IAC9CF,gBAAgB,CAAEG,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,gBAAgB,GAAGf,WAAW,CACjCgB,YAAY,IAAK;IAAA,IAAAC,qBAAA;IAChB;IACA,IAAI,EAACD,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEE,OAAO,GAAE;MAC1BC,OAAO,CAACC,IAAI,CAAC,wEAAwE,CAAC;MACtF,OAAO,IAAI;IACb;IAEA,MAAMT,EAAE,GAAGU,IAAI,CAACC,GAAG,CAAC,CAAC;IACrB,MAAMC,eAAe,GAAG;MACtBZ,EAAE;MACF,GAAGK,YAAY;MACfQ,SAAS,EAAE,IAAIH,IAAI,CAAC;IACtB,CAAC;IAEDZ,gBAAgB,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEW,eAAe,CAAC,CAAC;IAEtD,MAAME,OAAO,IAAAR,qBAAA,GAAGD,YAAY,CAACS,OAAO,cAAAR,qBAAA,cAAAA,qBAAA,GAAI,IAAI;IAC5C,IAAIQ,OAAO,GAAG,CAAC,EAAE;MACfC,UAAU,CAAC,MAAM;QACfhB,mBAAmB,CAACC,EAAE,CAAC;MACzB,CAAC,EAAEc,OAAO,CAAC;IACb;IACA,OAAOd,EAAE;EACX,CAAC,EACD,CAACD,mBAAmB,CACtB,CAAC;EAED,MAAMiB,qBAAqB,GAAG3B,WAAW,CAAC,MAAM;IAC9CS,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,KAAK,GAAG;IACZpB,aAAa;IACbO,gBAAgB;IAChBL,mBAAmB;IACnBiB;EACF,CAAC;EAED,oBAAOxB,OAAA,CAACC,mBAAmB,CAACyB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EAAEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA+B,CAAC;AAC9F,CAAC;;AAED;AAAA1B,EAAA,CAjDaF,oBAAoB;AAAA6B,EAAA,GAApB7B,oBAAoB;AAkDjC,OAAO,MAAM8B,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,MAAMC,GAAG,GAAGpC,UAAU,CAACG,mBAAmB,CAAC;EAC3C,IAAI,CAACiC,GAAG,EAAE;IACR,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;EAClF;EACA,OAAOD,GAAG;AACZ,CAAC;AAACD,GAAA,CANWD,eAAe;AAQ5B,eAAe9B,oBAAoB;AAAC,IAAA6B,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}