{"ast":null,"code":"// src/utils/analyticsUtils.js\n// Analytics utility functions for tracking user actions and application performance\n\n// Mock implementation for analytics tracking\n// In production, this would be replaced with a real analytics provider like Google Analytics, Mixpanel, etc.\nconst analyticsEndpoint = process.env.REACT_APP_ANALYTICS_ENDPOINT || '/api/analytics';\nconst analyticsEnabled = process.env.REACT_APP_ANALYTICS_ENABLED !== 'false';\nconst debugMode = process.env.NODE_ENV === 'development';\n\n/**\r\n * Initialize analytics\r\n * @param {Object} options - Configuration options\r\n */\nexport const initAnalytics = (options = {}) => {\n  if (!analyticsEnabled) return;\n  const {\n    userId,\n    walletAddress,\n    referrer\n  } = options;\n  try {\n    // Log initialization\n    if (debugMode) {\n      console.log('Analytics initialized:', {\n        userId,\n        walletAddress,\n        referrer\n      });\n    }\n\n    // Send initialization event\n    sendAnalyticsEvent('init', {\n      timestamp: Date.now(),\n      userId,\n      walletAddress,\n      referrer: referrer || document.referrer,\n      url: window.location.href,\n      userAgent: navigator.userAgent,\n      screenSize: `${window.innerWidth}x${window.innerHeight}`\n    });\n\n    // Set up page view tracking\n    trackPageViews();\n  } catch (error) {\n    console.error('Analytics initialization error:', error);\n  }\n};\n\n/**\r\n * Track wallet connection/disconnection events\r\n * @param {string} address - Wallet address\r\n * @param {string} provider - Wallet provider name\r\n * @param {boolean} success - Whether operation was successful\r\n * @param {string} error - Error message if failed\r\n */\nexport const trackWalletConnection = (address, provider, success, error = null) => {\n  if (!analyticsEnabled) return;\n  const eventName = success ? 'wallet_connected' : 'wallet_connection_failed';\n  const eventData = {\n    timestamp: Date.now(),\n    address: address ? maskAddress(address) : null,\n    provider,\n    success\n  };\n  if (error) {\n    eventData.error = error;\n  }\n  sendAnalyticsEvent(eventName, eventData);\n};\n\n/**\r\n * Track a blockchain transaction\r\n * @param {string} type - Transaction type\r\n * @param {string} protocol - Protocol name\r\n * @param {string|number} amount - Transaction amount\r\n * @param {boolean} success - Whether transaction was successful\r\n * @param {string} error - Error message if failed\r\n */\nexport const trackTransaction = (type, protocol, amount, success, error = null) => {\n  if (!analyticsEnabled) return;\n  const eventName = success ? 'transaction_success' : 'transaction_failed';\n  const eventData = {\n    timestamp: Date.now(),\n    type,\n    protocol,\n    amount: parseFloat(amount),\n    success\n  };\n  if (error) {\n    eventData.error = error;\n  }\n  sendAnalyticsEvent(eventName, eventData);\n};\n\n/**\r\n * Track AI recommendation generation\r\n * @param {string} riskProfile - User risk profile\r\n * @param {string|number} amount - Investment amount\r\n * @param {boolean} success - Whether generation was successful\r\n * @param {string} error - Error message if failed\r\n */\nexport const trackRecommendation = (riskProfile, amount, success, error = null) => {\n  if (!analyticsEnabled) return;\n  const eventName = success ? 'recommendation_generated' : 'recommendation_failed';\n  const eventData = {\n    timestamp: Date.now(),\n    riskProfile,\n    amount: parseFloat(amount),\n    success\n  };\n  if (error) {\n    eventData.error = error;\n  }\n  sendAnalyticsEvent(eventName, eventData);\n};\n\n/**\r\n * Track auto-optimizer events\r\n * @param {string} action - Action (enable, disable, rebalance)\r\n * @param {Object} settings - Optimizer settings\r\n * @param {boolean} success - Whether action was successful\r\n */\nexport const trackOptimizer = (action, settings, success = true) => {\n  if (!analyticsEnabled) return;\n  const eventName = `optimizer_${action}`;\n  const eventData = {\n    timestamp: Date.now(),\n    action,\n    settings,\n    success\n  };\n  sendAnalyticsEvent(eventName, eventData);\n};\n\n/**\r\n * Track user engagement with specific features\r\n * @param {string} feature - Feature name\r\n * @param {string} action - Action taken\r\n * @param {Object} metadata - Additional metadata\r\n */\nexport const trackEngagement = (feature, action, metadata = {}) => {\n  if (!analyticsEnabled) return;\n  const eventName = 'feature_engagement';\n  const eventData = {\n    timestamp: Date.now(),\n    feature,\n    action,\n    ...metadata\n  };\n  sendAnalyticsEvent(eventName, eventData);\n};\n\n/**\r\n * Track page views\r\n */\nexport const trackPageViews = () => {\n  if (!analyticsEnabled) return;\n\n  // Track initial page view\n  const currentPage = window.location.pathname;\n  trackPageView(currentPage);\n\n  // Set up history change listener for SPAs\n  const originalPushState = window.history.pushState;\n  window.history.pushState = function () {\n    originalPushState.apply(this, arguments);\n    trackPageView(window.location.pathname);\n  };\n\n  // Handle back/forward navigation\n  window.addEventListener('popstate', () => {\n    trackPageView(window.location.pathname);\n  });\n};\n\n/**\r\n * Track individual page view\r\n * @param {string} path - Page path\r\n */\nexport const trackPageView = path => {\n  if (!analyticsEnabled) return;\n  const eventData = {\n    timestamp: Date.now(),\n    path,\n    title: document.title,\n    referrer: document.referrer\n  };\n  sendAnalyticsEvent('page_view', eventData);\n};\n\n/**\r\n * Track application performance metrics\r\n * @param {string} metric - Metric name\r\n * @param {number} value - Metric value\r\n * @param {Object} metadata - Additional metadata\r\n */\nexport const trackPerformance = (metric, value, metadata = {}) => {\n  if (!analyticsEnabled) return;\n  const eventData = {\n    timestamp: Date.now(),\n    metric,\n    value,\n    ...metadata\n  };\n  sendAnalyticsEvent('performance', eventData);\n};\n\n/**\r\n * Track errors\r\n * @param {string} context - Error context\r\n * @param {string} message - Error message\r\n * @param {Object} metadata - Additional metadata\r\n */\nexport const trackError = (context, message, metadata = {}) => {\n  if (!analyticsEnabled) return;\n  const eventData = {\n    timestamp: Date.now(),\n    context,\n    message,\n    url: window.location.href,\n    ...metadata\n  };\n  sendAnalyticsEvent('error', eventData);\n};\n\n/**\r\n * Send analytics event to server\r\n * @param {string} eventName - Event name\r\n * @param {Object} eventData - Event data\r\n */\nconst sendAnalyticsEvent = async (eventName, eventData) => {\n  try {\n    if (debugMode) {\n      console.log(`Analytics event: ${eventName}`, eventData);\n    }\n    if (!analyticsEnabled) return;\n\n    // For development or when endpoint is not available, just log\n    if (process.env.NODE_ENV === 'development' || !analyticsEndpoint) {\n      return;\n    }\n\n    // Use Beacon API if available for non-blocking analytics\n    if (navigator.sendBeacon) {\n      const blob = new Blob([JSON.stringify({\n        event: eventName,\n        data: eventData\n      })], {\n        type: 'application/json'\n      });\n      navigator.sendBeacon(analyticsEndpoint, blob);\n      return;\n    }\n\n    // Fallback to fetch API\n    fetch(analyticsEndpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        event: eventName,\n        data: eventData\n      }),\n      // Use keepalive to ensure the request completes even if page is unloaded\n      keepalive: true\n    }).catch(error => {\n      console.error('Analytics send error:', error);\n    });\n  } catch (error) {\n    console.error('Analytics error:', error);\n  }\n};\n\n/**\r\n * Mask sensitive data like wallet addresses\r\n * @param {string} address - Full wallet address\r\n * @returns {string} Masked address (e.g., 0x1234...5678)\r\n */\nconst maskAddress = address => {\n  if (!address || typeof address !== 'string') return null;\n  if (address.length <= 10) return address;\n  const prefix = address.substring(0, 6);\n  const suffix = address.substring(address.length - 4);\n  return `${prefix}...${suffix}`;\n};\nexport default {\n  initAnalytics,\n  trackWalletConnection,\n  trackTransaction,\n  trackRecommendation,\n  trackOptimizer,\n  trackEngagement,\n  trackPageView,\n  trackPerformance,\n  trackError\n};","map":{"version":3,"names":["analyticsEndpoint","process","env","REACT_APP_ANALYTICS_ENDPOINT","analyticsEnabled","REACT_APP_ANALYTICS_ENABLED","debugMode","NODE_ENV","initAnalytics","options","userId","walletAddress","referrer","console","log","sendAnalyticsEvent","timestamp","Date","now","document","url","window","location","href","userAgent","navigator","screenSize","innerWidth","innerHeight","trackPageViews","error","trackWalletConnection","address","provider","success","eventName","eventData","maskAddress","trackTransaction","type","protocol","amount","parseFloat","trackRecommendation","riskProfile","trackOptimizer","action","settings","trackEngagement","feature","metadata","currentPage","pathname","trackPageView","originalPushState","history","pushState","apply","arguments","addEventListener","path","title","trackPerformance","metric","value","trackError","context","message","sendBeacon","blob","Blob","JSON","stringify","event","data","fetch","method","headers","body","keepalive","catch","length","prefix","substring","suffix"],"sources":["/home/ck/compoundefi/client/src/utils/analyticsUtils.js"],"sourcesContent":["// src/utils/analyticsUtils.js\r\n// Analytics utility functions for tracking user actions and application performance\r\n\r\n// Mock implementation for analytics tracking\r\n// In production, this would be replaced with a real analytics provider like Google Analytics, Mixpanel, etc.\r\nconst analyticsEndpoint = process.env.REACT_APP_ANALYTICS_ENDPOINT || '/api/analytics';\r\nconst analyticsEnabled = process.env.REACT_APP_ANALYTICS_ENABLED !== 'false';\r\nconst debugMode = process.env.NODE_ENV === 'development';\r\n\r\n/**\r\n * Initialize analytics\r\n * @param {Object} options - Configuration options\r\n */\r\nexport const initAnalytics = (options = {}) => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  const { userId, walletAddress, referrer } = options;\r\n  \r\n  try {\r\n    // Log initialization\r\n    if (debugMode) {\r\n      console.log('Analytics initialized:', { userId, walletAddress, referrer });\r\n    }\r\n    \r\n    // Send initialization event\r\n    sendAnalyticsEvent('init', {\r\n      timestamp: Date.now(),\r\n      userId,\r\n      walletAddress,\r\n      referrer: referrer || document.referrer,\r\n      url: window.location.href,\r\n      userAgent: navigator.userAgent,\r\n      screenSize: `${window.innerWidth}x${window.innerHeight}`\r\n    });\r\n    \r\n    // Set up page view tracking\r\n    trackPageViews();\r\n  } catch (error) {\r\n    console.error('Analytics initialization error:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Track wallet connection/disconnection events\r\n * @param {string} address - Wallet address\r\n * @param {string} provider - Wallet provider name\r\n * @param {boolean} success - Whether operation was successful\r\n * @param {string} error - Error message if failed\r\n */\r\nexport const trackWalletConnection = (address, provider, success, error = null) => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  const eventName = success ? 'wallet_connected' : 'wallet_connection_failed';\r\n  \r\n  const eventData = {\r\n    timestamp: Date.now(),\r\n    address: address ? maskAddress(address) : null,\r\n    provider,\r\n    success\r\n  };\r\n  \r\n  if (error) {\r\n    eventData.error = error;\r\n  }\r\n  \r\n  sendAnalyticsEvent(eventName, eventData);\r\n};\r\n\r\n/**\r\n * Track a blockchain transaction\r\n * @param {string} type - Transaction type\r\n * @param {string} protocol - Protocol name\r\n * @param {string|number} amount - Transaction amount\r\n * @param {boolean} success - Whether transaction was successful\r\n * @param {string} error - Error message if failed\r\n */\r\nexport const trackTransaction = (type, protocol, amount, success, error = null) => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  const eventName = success ? 'transaction_success' : 'transaction_failed';\r\n  \r\n  const eventData = {\r\n    timestamp: Date.now(),\r\n    type,\r\n    protocol,\r\n    amount: parseFloat(amount),\r\n    success\r\n  };\r\n  \r\n  if (error) {\r\n    eventData.error = error;\r\n  }\r\n  \r\n  sendAnalyticsEvent(eventName, eventData);\r\n};\r\n\r\n/**\r\n * Track AI recommendation generation\r\n * @param {string} riskProfile - User risk profile\r\n * @param {string|number} amount - Investment amount\r\n * @param {boolean} success - Whether generation was successful\r\n * @param {string} error - Error message if failed\r\n */\r\nexport const trackRecommendation = (riskProfile, amount, success, error = null) => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  const eventName = success ? 'recommendation_generated' : 'recommendation_failed';\r\n  \r\n  const eventData = {\r\n    timestamp: Date.now(),\r\n    riskProfile,\r\n    amount: parseFloat(amount),\r\n    success\r\n  };\r\n  \r\n  if (error) {\r\n    eventData.error = error;\r\n  }\r\n  \r\n  sendAnalyticsEvent(eventName, eventData);\r\n};\r\n\r\n/**\r\n * Track auto-optimizer events\r\n * @param {string} action - Action (enable, disable, rebalance)\r\n * @param {Object} settings - Optimizer settings\r\n * @param {boolean} success - Whether action was successful\r\n */\r\nexport const trackOptimizer = (action, settings, success = true) => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  const eventName = `optimizer_${action}`;\r\n  \r\n  const eventData = {\r\n    timestamp: Date.now(),\r\n    action,\r\n    settings,\r\n    success\r\n  };\r\n  \r\n  sendAnalyticsEvent(eventName, eventData);\r\n};\r\n\r\n/**\r\n * Track user engagement with specific features\r\n * @param {string} feature - Feature name\r\n * @param {string} action - Action taken\r\n * @param {Object} metadata - Additional metadata\r\n */\r\nexport const trackEngagement = (feature, action, metadata = {}) => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  const eventName = 'feature_engagement';\r\n  \r\n  const eventData = {\r\n    timestamp: Date.now(),\r\n    feature,\r\n    action,\r\n    ...metadata\r\n  };\r\n  \r\n  sendAnalyticsEvent(eventName, eventData);\r\n};\r\n\r\n/**\r\n * Track page views\r\n */\r\nexport const trackPageViews = () => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  // Track initial page view\r\n  const currentPage = window.location.pathname;\r\n  trackPageView(currentPage);\r\n  \r\n  // Set up history change listener for SPAs\r\n  const originalPushState = window.history.pushState;\r\n  window.history.pushState = function() {\r\n    originalPushState.apply(this, arguments);\r\n    trackPageView(window.location.pathname);\r\n  };\r\n  \r\n  // Handle back/forward navigation\r\n  window.addEventListener('popstate', () => {\r\n    trackPageView(window.location.pathname);\r\n  });\r\n};\r\n\r\n/**\r\n * Track individual page view\r\n * @param {string} path - Page path\r\n */\r\nexport const trackPageView = (path) => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  const eventData = {\r\n    timestamp: Date.now(),\r\n    path,\r\n    title: document.title,\r\n    referrer: document.referrer\r\n  };\r\n  \r\n  sendAnalyticsEvent('page_view', eventData);\r\n};\r\n\r\n/**\r\n * Track application performance metrics\r\n * @param {string} metric - Metric name\r\n * @param {number} value - Metric value\r\n * @param {Object} metadata - Additional metadata\r\n */\r\nexport const trackPerformance = (metric, value, metadata = {}) => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  const eventData = {\r\n    timestamp: Date.now(),\r\n    metric,\r\n    value,\r\n    ...metadata\r\n  };\r\n  \r\n  sendAnalyticsEvent('performance', eventData);\r\n};\r\n\r\n/**\r\n * Track errors\r\n * @param {string} context - Error context\r\n * @param {string} message - Error message\r\n * @param {Object} metadata - Additional metadata\r\n */\r\nexport const trackError = (context, message, metadata = {}) => {\r\n  if (!analyticsEnabled) return;\r\n  \r\n  const eventData = {\r\n    timestamp: Date.now(),\r\n    context,\r\n    message,\r\n    url: window.location.href,\r\n    ...metadata\r\n  };\r\n  \r\n  sendAnalyticsEvent('error', eventData);\r\n};\r\n\r\n/**\r\n * Send analytics event to server\r\n * @param {string} eventName - Event name\r\n * @param {Object} eventData - Event data\r\n */\r\nconst sendAnalyticsEvent = async (eventName, eventData) => {\r\n  try {\r\n    if (debugMode) {\r\n      console.log(`Analytics event: ${eventName}`, eventData);\r\n    }\r\n    \r\n    if (!analyticsEnabled) return;\r\n    \r\n    // For development or when endpoint is not available, just log\r\n    if (process.env.NODE_ENV === 'development' || !analyticsEndpoint) {\r\n      return;\r\n    }\r\n    \r\n    // Use Beacon API if available for non-blocking analytics\r\n    if (navigator.sendBeacon) {\r\n      const blob = new Blob(\r\n        [JSON.stringify({ event: eventName, data: eventData })], \r\n        { type: 'application/json' }\r\n      );\r\n      navigator.sendBeacon(analyticsEndpoint, blob);\r\n      return;\r\n    }\r\n    \r\n    // Fallback to fetch API\r\n    fetch(analyticsEndpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        event: eventName,\r\n        data: eventData\r\n      }),\r\n      // Use keepalive to ensure the request completes even if page is unloaded\r\n      keepalive: true\r\n    }).catch(error => {\r\n      console.error('Analytics send error:', error);\r\n    });\r\n  } catch (error) {\r\n    console.error('Analytics error:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Mask sensitive data like wallet addresses\r\n * @param {string} address - Full wallet address\r\n * @returns {string} Masked address (e.g., 0x1234...5678)\r\n */\r\nconst maskAddress = (address) => {\r\n  if (!address || typeof address !== 'string') return null;\r\n  \r\n  if (address.length <= 10) return address;\r\n  \r\n  const prefix = address.substring(0, 6);\r\n  const suffix = address.substring(address.length - 4);\r\n  \r\n  return `${prefix}...${suffix}`;\r\n};\r\n\r\nexport default {\r\n  initAnalytics,\r\n  trackWalletConnection,\r\n  trackTransaction,\r\n  trackRecommendation,\r\n  trackOptimizer,\r\n  trackEngagement,\r\n  trackPageView,\r\n  trackPerformance,\r\n  trackError\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}