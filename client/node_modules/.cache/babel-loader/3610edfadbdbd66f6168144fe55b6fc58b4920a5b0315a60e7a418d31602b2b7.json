{"ast":null,"code":"// src/index.browser.ts\nimport axios from \"axios\";\nasync function aptosClient(options) {\n  var _a;\n  const {\n    params,\n    method,\n    url,\n    headers,\n    body,\n    overrides\n  } = options;\n  const requestConfig = {\n    headers,\n    method,\n    url,\n    params,\n    data: body,\n    withCredentials: (_a = overrides == null ? void 0 : overrides.WITH_CREDENTIALS) != null ? _a : true\n  };\n  try {\n    const response = await axios(requestConfig);\n    return {\n      status: response.status,\n      statusText: response.statusText,\n      data: response.data,\n      headers: response.headers,\n      config: response.config\n    };\n  } catch (error) {\n    const axiosError = error;\n    if (axiosError.response) {\n      return axiosError.response;\n    }\n    throw error;\n  }\n}\nexport { aptosClient as default };\n//# sourceMappingURL=index.browser.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}