{"ast":null,"code":"var _jsxFileName = \"/home/ck/compoundefi/client/src/context/ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Define available themes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const THEMES = {\n  LIGHT: 'light',\n  DARK: 'dark',\n  SYSTEM: 'system'\n};\n\n// Create the context\nexport const ThemeContext = /*#__PURE__*/createContext(null);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // State to track the selected theme preference\n  const [themePreference, setThemePreference] = useState(THEMES.SYSTEM);\n\n  // State to track the actual theme that's applied (light or dark)\n  const [activeTheme, setActiveTheme] = useState(THEMES.LIGHT);\n\n  // Update active theme based on preference and system setting\n  useEffect(() => {\n    // Load theme preference from localStorage\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme && Object.values(THEMES).includes(savedTheme)) {\n      setThemePreference(savedTheme);\n    }\n\n    // Function to set the active theme\n    const updateActiveTheme = () => {\n      if (themePreference === THEMES.SYSTEM) {\n        // Use system preference\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        setActiveTheme(prefersDark ? THEMES.DARK : THEMES.LIGHT);\n      } else {\n        // Use explicitly selected theme\n        setActiveTheme(themePreference);\n      }\n    };\n\n    // Initial update\n    updateActiveTheme();\n\n    // Listen for system theme changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      if (themePreference === THEMES.SYSTEM) {\n        updateActiveTheme();\n      }\n    };\n\n    // Add listener for modern browsers\n    if (mediaQuery.addEventListener) {\n      mediaQuery.addEventListener('change', handleChange);\n    } else {\n      // Fallback for older browsers\n      mediaQuery.addListener(handleChange);\n    }\n\n    // Apply theme to document\n    document.documentElement.setAttribute('data-theme', activeTheme);\n    if (activeTheme === THEMES.DARK) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n\n    // Cleanup function\n    return () => {\n      if (mediaQuery.removeEventListener) {\n        mediaQuery.removeEventListener('change', handleChange);\n      } else {\n        mediaQuery.removeListener(handleChange);\n      }\n    };\n  }, [themePreference, activeTheme]);\n\n  // Function to update theme preference\n  const setTheme = theme => {\n    if (Object.values(THEMES).includes(theme)) {\n      setThemePreference(theme);\n      localStorage.setItem('theme', theme);\n    }\n  };\n\n  // Context value\n  const value = {\n    themePreference,\n    activeTheme,\n    setTheme,\n    isLightMode: activeTheme === THEMES.LIGHT,\n    isDarkMode: activeTheme === THEMES.DARK\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the theme context\n_s(ThemeProvider, \"xJb1t4G5j2vu17mawbUkeUcN+yA=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = React.useContext(ThemeContext);\n  if (context === null) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","THEMES","LIGHT","DARK","SYSTEM","ThemeContext","ThemeProvider","children","_s","themePreference","setThemePreference","activeTheme","setActiveTheme","savedTheme","localStorage","getItem","Object","values","includes","updateActiveTheme","prefersDark","window","matchMedia","matches","mediaQuery","handleChange","addEventListener","addListener","document","documentElement","setAttribute","classList","add","remove","removeEventListener","removeListener","setTheme","theme","setItem","value","isLightMode","isDarkMode","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","useContext","Error","$RefreshReg$"],"sources":["/home/ck/compoundefi/client/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Define available themes\r\nexport const THEMES = {\r\n  LIGHT: 'light',\r\n  DARK: 'dark',\r\n  SYSTEM: 'system'\r\n};\r\n\r\n// Create the context\r\nexport const ThemeContext = createContext(null);\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // State to track the selected theme preference\r\n  const [themePreference, setThemePreference] = useState(THEMES.SYSTEM);\r\n  \r\n  // State to track the actual theme that's applied (light or dark)\r\n  const [activeTheme, setActiveTheme] = useState(THEMES.LIGHT);\r\n\r\n  // Update active theme based on preference and system setting\r\n  useEffect(() => {\r\n    // Load theme preference from localStorage\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme && Object.values(THEMES).includes(savedTheme)) {\r\n      setThemePreference(savedTheme);\r\n    }\r\n    \r\n    // Function to set the active theme\r\n    const updateActiveTheme = () => {\r\n      if (themePreference === THEMES.SYSTEM) {\r\n        // Use system preference\r\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n        setActiveTheme(prefersDark ? THEMES.DARK : THEMES.LIGHT);\r\n      } else {\r\n        // Use explicitly selected theme\r\n        setActiveTheme(themePreference);\r\n      }\r\n    };\r\n    \r\n    // Initial update\r\n    updateActiveTheme();\r\n    \r\n    // Listen for system theme changes\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const handleChange = () => {\r\n      if (themePreference === THEMES.SYSTEM) {\r\n        updateActiveTheme();\r\n      }\r\n    };\r\n    \r\n    // Add listener for modern browsers\r\n    if (mediaQuery.addEventListener) {\r\n      mediaQuery.addEventListener('change', handleChange);\r\n    } else {\r\n      // Fallback for older browsers\r\n      mediaQuery.addListener(handleChange);\r\n    }\r\n    \r\n    // Apply theme to document\r\n    document.documentElement.setAttribute('data-theme', activeTheme);\r\n    \r\n    if (activeTheme === THEMES.DARK) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      if (mediaQuery.removeEventListener) {\r\n        mediaQuery.removeEventListener('change', handleChange);\r\n      } else {\r\n        mediaQuery.removeListener(handleChange);\r\n      }\r\n    };\r\n  }, [themePreference, activeTheme]);\r\n\r\n  // Function to update theme preference\r\n  const setTheme = (theme) => {\r\n    if (Object.values(THEMES).includes(theme)) {\r\n      setThemePreference(theme);\r\n      localStorage.setItem('theme', theme);\r\n    }\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    themePreference,\r\n    activeTheme,\r\n    setTheme,\r\n    isLightMode: activeTheme === THEMES.LIGHT,\r\n    isDarkMode: activeTheme === THEMES.DARK\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the theme context\r\nexport const useTheme = () => {\r\n  const context = React.useContext(ThemeContext);\r\n  if (context === null) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}