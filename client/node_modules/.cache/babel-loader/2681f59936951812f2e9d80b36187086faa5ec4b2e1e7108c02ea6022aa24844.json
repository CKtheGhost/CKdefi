{"ast":null,"code":"// src/services/api.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nconst api = {\n  get: async endpoint => {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`);\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('API GET error:', error);\n      throw error;\n    }\n  },\n  post: async (endpoint, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('API POST error:', error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","api","get","endpoint","response","fetch","ok","Error","status","json","error","console","post","data","method","headers","body","JSON","stringify"],"sources":["/home/ck/compoundefi/client/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\nconst api = {\r\n  get: async (endpoint) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`);\r\n      if (!response.ok) {\r\n        throw new Error(`API error: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API GET error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  post: async (endpoint, data) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`API error: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API POST error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAG;EACVC,GAAG,EAAE,MAAOC,QAAQ,IAAK;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,GAAGM,QAAQ,EAAE,CAAC;MAC1D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAClD;MACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,IAAI,EAAE,MAAAA,CAAOT,QAAQ,EAAEU,IAAI,KAAK;IAC9B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,GAAGM,QAAQ,EAAE,EAAE;QACzDW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC3B,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAClD;MACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}