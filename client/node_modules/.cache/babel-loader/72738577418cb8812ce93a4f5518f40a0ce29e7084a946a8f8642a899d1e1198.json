{"ast":null,"code":"var _jsxFileName = \"/home/ck/compoundefi/client/src/pages/AutoOptimizer.jsx\",\n  _s = $RefreshSig$();\n// src/pages/AutoOptimizer.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useWalletContext } from '../context/WalletContext';\nimport DashboardLayout from '../components/layout/DashboardLayout';\nimport OptimizerStatus from '../components/optimizer/OptimizerStatus';\nimport OptimizerSettings from '../components/optimizer/OptimizerSettings';\nimport PortfolioBalance from '../components/optimizer/PortfolioBalance';\nimport ExecutionHistory from '../components/optimizer/ExecutionHistory';\nimport Card from '../components/common/Card';\nimport { CardHeader, CardTitle, CardDescription, CardContent } from '../components/common/Card';\nimport Button from '../components/common/Button';\nimport usePortfolio from '../hooks/usePortfolio';\nimport { useNotification } from '../context/NotificationContext';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoOptimizer = () => {\n  _s();\n  const {\n    connected,\n    address\n  } = useWalletContext();\n  const {\n    portfolio,\n    fetchPortfolioData,\n    loading: portfolioLoading\n  } = usePortfolio();\n  const {\n    showNotification\n  } = useNotification();\n  const [isEnabled, setIsEnabled] = useState(false);\n  const [nextRunTime, setNextRunTime] = useState(null);\n  const [lastRunTime, setLastRunTime] = useState(null);\n  const [history, setHistory] = useState([]);\n  const [settings, setSettings] = useState({\n    interval: 24,\n    // hours\n    rebalanceThreshold: 5,\n    // percentage drift\n    maxSlippage: 1,\n    // percentage\n    preserveStakedPositions: true\n  });\n  const [isRebalancing, setIsRebalancing] = useState(false);\n\n  // Load settings from localStorage\n  useEffect(() => {\n    const savedSettings = localStorage.getItem('autoOptimizerSettings');\n    if (savedSettings) {\n      try {\n        const parsedSettings = JSON.parse(savedSettings);\n        setSettings(prev => ({\n          ...prev,\n          ...parsedSettings\n        }));\n      } catch (error) {\n        console.error('Failed to parse saved settings:', error);\n      }\n    }\n\n    // Load state from localStorage\n    const isEnabledSaved = localStorage.getItem('autoOptimizeEnabled') === 'true';\n    setIsEnabled(isEnabledSaved);\n    const lastRun = localStorage.getItem('lastAutoOptimizeRun');\n    if (lastRun) {\n      setLastRunTime(parseInt(lastRun));\n    }\n    const nextRun = localStorage.getItem('nextAutoOptimizeRun');\n    if (nextRun) {\n      setNextRunTime(parseInt(nextRun));\n    }\n\n    // Load history from localStorage\n    const savedHistory = localStorage.getItem('autoOptimizeHistory');\n    if (savedHistory) {\n      try {\n        setHistory(JSON.parse(savedHistory));\n      } catch (error) {\n        console.error('Failed to parse optimization history:', error);\n      }\n    }\n  }, []);\n\n  // Update settings in localStorage when they change\n  useEffect(() => {\n    localStorage.setItem('autoOptimizerSettings', JSON.stringify(settings));\n  }, [settings]);\n\n  // Check for scheduled runs periodically\n  useEffect(() => {\n    if (!isEnabled || !nextRunTime) return;\n    const checkInterval = setInterval(() => {\n      const now = Date.now();\n\n      // Check if it's time to run optimization\n      if (now >= nextRunTime) {\n        executeRebalance();\n      }\n    }, 60000); // Check every minute\n\n    return () => clearInterval(checkInterval);\n  }, [isEnabled, nextRunTime]);\n\n  // Load portfolio data on mount\n  useEffect(() => {\n    if (connected && address) {\n      fetchPortfolioData(address);\n    }\n  }, [connected, address, fetchPortfolioData]);\n  const toggleAutoOptimize = () => {\n    const newStatus = !isEnabled;\n    setIsEnabled(newStatus);\n    localStorage.setItem('autoOptimizeEnabled', newStatus.toString());\n    if (newStatus) {\n      // Schedule next run\n      const now = Date.now();\n      const nextRun = now + settings.interval * 60 * 60 * 1000;\n      setNextRunTime(nextRun);\n      localStorage.setItem('nextAutoOptimizeRun', nextRun.toString());\n      showNotification('Auto-optimization enabled', 'success');\n    } else {\n      showNotification('Auto-optimization disabled', 'info');\n    }\n  };\n  const executeRebalance = async () => {\n    if (isRebalancing || !connected) return;\n    setIsRebalancing(true);\n    showNotification('Portfolio rebalancing in progress...', 'info');\n    try {\n      var _response$data$operat, _response$data$failed, _response$data$driftA;\n      // Call API to execute rebalance\n      const response = await api.post('/auto-rebalance/execute', {\n        walletAddress: address,\n        settings\n      });\n\n      // Save result to history\n      const historyEntry = {\n        timestamp: Date.now(),\n        type: 'rebalance',\n        status: response.data.success ? 'success' : 'partial',\n        operations: ((_response$data$operat = response.data.operations) === null || _response$data$operat === void 0 ? void 0 : _response$data$operat.length) || 0,\n        failedOperations: ((_response$data$failed = response.data.failedOperations) === null || _response$data$failed === void 0 ? void 0 : _response$data$failed.length) || 0,\n        driftPercentage: ((_response$data$driftA = response.data.driftAnalysis) === null || _response$data$driftA === void 0 ? void 0 : _response$data$driftA.maxDrift) || 0\n      };\n      addToHistory(historyEntry);\n\n      // Update last run time\n      const now = Date.now();\n      setLastRunTime(now);\n      localStorage.setItem('lastAutoOptimizeRun', now.toString());\n\n      // Schedule next run\n      scheduleNextRun();\n\n      // Show result notification\n      showNotification(response.data.success ? 'Portfolio rebalance completed successfully' : 'Portfolio rebalance completed with some issues', response.data.success ? 'success' : 'warning');\n\n      // Refresh portfolio data\n      fetchPortfolioData(address);\n    } catch (error) {\n      console.error('Rebalance error:', error);\n\n      // Add error to history\n      const errorEntry = {\n        timestamp: Date.now(),\n        type: 'error',\n        status: 'failed',\n        reason: error.message || 'Unknown error'\n      };\n      addToHistory(errorEntry);\n      showNotification(`Rebalance failed: ${error.message}`, 'error');\n\n      // Schedule next attempt in half the normal interval\n      const retryTime = Date.now() + settings.interval * 60 * 60 * 1000 / 2;\n      setNextRunTime(retryTime);\n      localStorage.setItem('nextAutoOptimizeRun', retryTime.toString());\n    } finally {\n      setIsRebalancing(false);\n    }\n  };\n  const scheduleNextRun = () => {\n    if (!isEnabled) return;\n    const now = Date.now();\n    const nextRun = now + settings.interval * 60 * 60 * 1000;\n    setNextRunTime(nextRun);\n    localStorage.setItem('nextAutoOptimizeRun', nextRun.toString());\n  };\n  const addToHistory = entry => {\n    const updatedHistory = [entry, ...history];\n    if (updatedHistory.length > 10) {\n      updatedHistory.length = 10; // Keep only the 10 most recent entries\n    }\n    setHistory(updatedHistory);\n    localStorage.setItem('autoOptimizeHistory', JSON.stringify(updatedHistory));\n  };\n  const handleSaveSettings = newSettings => {\n    setSettings(newSettings);\n    showNotification('Settings saved successfully', 'success');\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-white\",\n          children: \"Portfolio Auto-Optimizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), !connected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-600/20 border border-yellow-600 text-yellow-200 px-4 py-2 rounded-md text-sm\",\n          children: \"Please connect your wallet to use auto-optimization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-gray-800 border border-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                    children: \"Auto-Optimization\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n                    children: \"Let AI automatically optimize your portfolio for maximum yield\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: toggleAutoOptimize,\n                  disabled: !connected,\n                  variant: isEnabled ? 'danger' : 'primary',\n                  children: [isEnabled ? 'Disable' : 'Enable', \" Auto-Optimize\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(OptimizerStatus, {\n                enabled: isEnabled,\n                onToggle: toggleAutoOptimize,\n                nextRun: nextRunTime,\n                onExecuteNow: executeRebalance,\n                isRebalancing: isRebalancing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-gray-800 border border-gray-700 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: \"Portfolio Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n                children: \"Current allocation versus optimal allocation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(PortfolioBalance, {\n                portfolioData: portfolio,\n                stakingData: {\n                  strategies: {\n                    balanced: {\n                      allocation: [{\n                        protocol: 'native',\n                        percentage: 20\n                      }, {\n                        protocol: 'amnis',\n                        percentage: 30\n                      }, {\n                        protocol: 'thala',\n                        percentage: 15\n                      }, {\n                        protocol: 'tortuga',\n                        percentage: 15\n                      }, {\n                        protocol: 'liquidity',\n                        percentage: 20\n                      }]\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-gray-800 border border-gray-700 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: \"Execution History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n                children: \"Recent auto-optimization activities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(ExecutionHistory, {\n                history: history\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-gray-800 border border-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: \"Optimizer Settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n                children: \"Configure auto-optimization parameters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(OptimizerSettings, {\n                settings: settings,\n                onSave: handleSaveSettings,\n                disabled: !connected || isRebalancing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-900/30 rounded-lg p-6 mt-6 border border-blue-800/50\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-blue-300 mb-3\",\n              children: \"How Auto-Optimizer Works\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3 text-sm text-blue-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"The Auto-Optimizer uses AI to analyze market conditions and your portfolio allocation to automatically maintain the optimal balance for maximum yield.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"It will only rebalance when the drift between your current allocation and the optimal allocation exceeds your configured threshold.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Each rebalance requires your wallet approval for the transactions. Make sure your wallet is accessible when a scheduled rebalance occurs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoOptimizer, \"rocwJxWku65n03Is4vnRwsc4eJQ=\", false, function () {\n  return [useWalletContext, usePortfolio, useNotification];\n});\n_c = AutoOptimizer;\nexport default AutoOptimizer;\nvar _c;\n$RefreshReg$(_c, \"AutoOptimizer\");","map":{"version":3,"names":["React","useState","useEffect","useWalletContext","DashboardLayout","OptimizerStatus","OptimizerSettings","PortfolioBalance","ExecutionHistory","Card","CardHeader","CardTitle","CardDescription","CardContent","Button","usePortfolio","useNotification","api","jsxDEV","_jsxDEV","AutoOptimizer","_s","connected","address","portfolio","fetchPortfolioData","loading","portfolioLoading","showNotification","isEnabled","setIsEnabled","nextRunTime","setNextRunTime","lastRunTime","setLastRunTime","history","setHistory","settings","setSettings","interval","rebalanceThreshold","maxSlippage","preserveStakedPositions","isRebalancing","setIsRebalancing","savedSettings","localStorage","getItem","parsedSettings","JSON","parse","prev","error","console","isEnabledSaved","lastRun","parseInt","nextRun","savedHistory","setItem","stringify","checkInterval","setInterval","now","Date","executeRebalance","clearInterval","toggleAutoOptimize","newStatus","toString","_response$data$operat","_response$data$failed","_response$data$driftA","response","post","walletAddress","historyEntry","timestamp","type","status","data","success","operations","length","failedOperations","driftPercentage","driftAnalysis","maxDrift","addToHistory","scheduleNextRun","errorEntry","reason","message","retryTime","entry","updatedHistory","handleSaveSettings","newSettings","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","variant","enabled","onToggle","onExecuteNow","portfolioData","stakingData","strategies","balanced","allocation","protocol","percentage","onSave","_c","$RefreshReg$"],"sources":["/home/ck/compoundefi/client/src/pages/AutoOptimizer.jsx"],"sourcesContent":["// src/pages/AutoOptimizer.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useWalletContext } from '../context/WalletContext';\r\nimport DashboardLayout from '../components/layout/DashboardLayout';\r\nimport OptimizerStatus from '../components/optimizer/OptimizerStatus';\r\nimport OptimizerSettings from '../components/optimizer/OptimizerSettings';\r\nimport PortfolioBalance from '../components/optimizer/PortfolioBalance';\r\nimport ExecutionHistory from '../components/optimizer/ExecutionHistory';\r\nimport Card from '../components/common/Card';\r\nimport { CardHeader, CardTitle, CardDescription, CardContent } from '../components/common/Card';\r\nimport Button from '../components/common/Button';\r\nimport usePortfolio from '../hooks/usePortfolio';\r\nimport { useNotification } from '../context/NotificationContext';\r\nimport api from '../services/api';\r\n\r\nconst AutoOptimizer = () => {\r\n  const { connected, address } = useWalletContext();\r\n  const { portfolio, fetchPortfolioData, loading: portfolioLoading } = usePortfolio();\r\n  const { showNotification } = useNotification();\r\n\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const [nextRunTime, setNextRunTime] = useState(null);\r\n  const [lastRunTime, setLastRunTime] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n  const [settings, setSettings] = useState({\r\n    interval: 24, // hours\r\n    rebalanceThreshold: 5, // percentage drift\r\n    maxSlippage: 1, // percentage\r\n    preserveStakedPositions: true\r\n  });\r\n  const [isRebalancing, setIsRebalancing] = useState(false);\r\n\r\n  // Load settings from localStorage\r\n  useEffect(() => {\r\n    const savedSettings = localStorage.getItem('autoOptimizerSettings');\r\n    if (savedSettings) {\r\n      try {\r\n        const parsedSettings = JSON.parse(savedSettings);\r\n        setSettings(prev => ({ ...prev, ...parsedSettings }));\r\n      } catch (error) {\r\n        console.error('Failed to parse saved settings:', error);\r\n      }\r\n    }\r\n\r\n    // Load state from localStorage\r\n    const isEnabledSaved = localStorage.getItem('autoOptimizeEnabled') === 'true';\r\n    setIsEnabled(isEnabledSaved);\r\n\r\n    const lastRun = localStorage.getItem('lastAutoOptimizeRun');\r\n    if (lastRun) {\r\n      setLastRunTime(parseInt(lastRun));\r\n    }\r\n\r\n    const nextRun = localStorage.getItem('nextAutoOptimizeRun');\r\n    if (nextRun) {\r\n      setNextRunTime(parseInt(nextRun));\r\n    }\r\n\r\n    // Load history from localStorage\r\n    const savedHistory = localStorage.getItem('autoOptimizeHistory');\r\n    if (savedHistory) {\r\n      try {\r\n        setHistory(JSON.parse(savedHistory));\r\n      } catch (error) {\r\n        console.error('Failed to parse optimization history:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Update settings in localStorage when they change\r\n  useEffect(() => {\r\n    localStorage.setItem('autoOptimizerSettings', JSON.stringify(settings));\r\n  }, [settings]);\r\n\r\n  // Check for scheduled runs periodically\r\n  useEffect(() => {\r\n    if (!isEnabled || !nextRunTime) return;\r\n\r\n    const checkInterval = setInterval(() => {\r\n      const now = Date.now();\r\n      \r\n      // Check if it's time to run optimization\r\n      if (now >= nextRunTime) {\r\n        executeRebalance();\r\n      }\r\n    }, 60000); // Check every minute\r\n\r\n    return () => clearInterval(checkInterval);\r\n  }, [isEnabled, nextRunTime]);\r\n\r\n  // Load portfolio data on mount\r\n  useEffect(() => {\r\n    if (connected && address) {\r\n      fetchPortfolioData(address);\r\n    }\r\n  }, [connected, address, fetchPortfolioData]);\r\n\r\n  const toggleAutoOptimize = () => {\r\n    const newStatus = !isEnabled;\r\n    setIsEnabled(newStatus);\r\n    localStorage.setItem('autoOptimizeEnabled', newStatus.toString());\r\n\r\n    if (newStatus) {\r\n      // Schedule next run\r\n      const now = Date.now();\r\n      const nextRun = now + (settings.interval * 60 * 60 * 1000);\r\n      setNextRunTime(nextRun);\r\n      localStorage.setItem('nextAutoOptimizeRun', nextRun.toString());\r\n      showNotification('Auto-optimization enabled', 'success');\r\n    } else {\r\n      showNotification('Auto-optimization disabled', 'info');\r\n    }\r\n  };\r\n\r\n  const executeRebalance = async () => {\r\n    if (isRebalancing || !connected) return;\r\n    \r\n    setIsRebalancing(true);\r\n    showNotification('Portfolio rebalancing in progress...', 'info');\r\n    \r\n    try {\r\n      // Call API to execute rebalance\r\n      const response = await api.post('/auto-rebalance/execute', {\r\n        walletAddress: address,\r\n        settings\r\n      });\r\n      \r\n      // Save result to history\r\n      const historyEntry = {\r\n        timestamp: Date.now(),\r\n        type: 'rebalance',\r\n        status: response.data.success ? 'success' : 'partial',\r\n        operations: response.data.operations?.length || 0,\r\n        failedOperations: response.data.failedOperations?.length || 0,\r\n        driftPercentage: response.data.driftAnalysis?.maxDrift || 0\r\n      };\r\n      \r\n      addToHistory(historyEntry);\r\n      \r\n      // Update last run time\r\n      const now = Date.now();\r\n      setLastRunTime(now);\r\n      localStorage.setItem('lastAutoOptimizeRun', now.toString());\r\n      \r\n      // Schedule next run\r\n      scheduleNextRun();\r\n      \r\n      // Show result notification\r\n      showNotification(\r\n        response.data.success \r\n          ? 'Portfolio rebalance completed successfully' \r\n          : 'Portfolio rebalance completed with some issues',\r\n        response.data.success ? 'success' : 'warning'\r\n      );\r\n      \r\n      // Refresh portfolio data\r\n      fetchPortfolioData(address);\r\n      \r\n    } catch (error) {\r\n      console.error('Rebalance error:', error);\r\n      \r\n      // Add error to history\r\n      const errorEntry = {\r\n        timestamp: Date.now(),\r\n        type: 'error',\r\n        status: 'failed',\r\n        reason: error.message || 'Unknown error'\r\n      };\r\n      \r\n      addToHistory(errorEntry);\r\n      \r\n      showNotification(`Rebalance failed: ${error.message}`, 'error');\r\n      \r\n      // Schedule next attempt in half the normal interval\r\n      const retryTime = Date.now() + (settings.interval * 60 * 60 * 1000 / 2);\r\n      setNextRunTime(retryTime);\r\n      localStorage.setItem('nextAutoOptimizeRun', retryTime.toString());\r\n    } finally {\r\n      setIsRebalancing(false);\r\n    }\r\n  };\r\n\r\n  const scheduleNextRun = () => {\r\n    if (!isEnabled) return;\r\n    \r\n    const now = Date.now();\r\n    const nextRun = now + (settings.interval * 60 * 60 * 1000);\r\n    setNextRunTime(nextRun);\r\n    localStorage.setItem('nextAutoOptimizeRun', nextRun.toString());\r\n  };\r\n\r\n  const addToHistory = (entry) => {\r\n    const updatedHistory = [entry, ...history];\r\n    if (updatedHistory.length > 10) {\r\n      updatedHistory.length = 10; // Keep only the 10 most recent entries\r\n    }\r\n    setHistory(updatedHistory);\r\n    localStorage.setItem('autoOptimizeHistory', JSON.stringify(updatedHistory));\r\n  };\r\n\r\n  const handleSaveSettings = (newSettings) => {\r\n    setSettings(newSettings);\r\n    showNotification('Settings saved successfully', 'success');\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <div className=\"container mx-auto px-4 py-6\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-2xl font-bold text-white\">Portfolio Auto-Optimizer</h1>\r\n          {!connected && (\r\n            <div className=\"bg-yellow-600/20 border border-yellow-600 text-yellow-200 px-4 py-2 rounded-md text-sm\">\r\n              Please connect your wallet to use auto-optimization\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <div className=\"md:col-span-2\">\r\n            <Card className=\"bg-gray-800 border border-gray-700\">\r\n              <CardHeader>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <div>\r\n                    <CardTitle>Auto-Optimization</CardTitle>\r\n                    <CardDescription>\r\n                      Let AI automatically optimize your portfolio for maximum yield\r\n                    </CardDescription>\r\n                  </div>\r\n                  <Button \r\n                    onClick={toggleAutoOptimize}\r\n                    disabled={!connected}\r\n                    variant={isEnabled ? 'danger' : 'primary'}\r\n                  >\r\n                    {isEnabled ? 'Disable' : 'Enable'} Auto-Optimize\r\n                  </Button>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <OptimizerStatus \r\n                  enabled={isEnabled}\r\n                  onToggle={toggleAutoOptimize}\r\n                  nextRun={nextRunTime}\r\n                  onExecuteNow={executeRebalance}\r\n                  isRebalancing={isRebalancing}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n            \r\n            <Card className=\"bg-gray-800 border border-gray-700 mt-6\">\r\n              <CardHeader>\r\n                <CardTitle>Portfolio Balance</CardTitle>\r\n                <CardDescription>\r\n                  Current allocation versus optimal allocation\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <PortfolioBalance \r\n                  portfolioData={portfolio} \r\n                  stakingData={{\r\n                    strategies: {\r\n                      balanced: {\r\n                        allocation: [\r\n                          { protocol: 'native', percentage: 20 },\r\n                          { protocol: 'amnis', percentage: 30 },\r\n                          { protocol: 'thala', percentage: 15 },\r\n                          { protocol: 'tortuga', percentage: 15 },\r\n                          { protocol: 'liquidity', percentage: 20 }\r\n                        ]\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n            \r\n            <Card className=\"bg-gray-800 border border-gray-700 mt-6\">\r\n              <CardHeader>\r\n                <CardTitle>Execution History</CardTitle>\r\n                <CardDescription>\r\n                  Recent auto-optimization activities\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ExecutionHistory history={history} />\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          \r\n          <div>\r\n            <Card className=\"bg-gray-800 border border-gray-700\">\r\n              <CardHeader>\r\n                <CardTitle>Optimizer Settings</CardTitle>\r\n                <CardDescription>\r\n                  Configure auto-optimization parameters\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <OptimizerSettings \r\n                  settings={settings} \r\n                  onSave={handleSaveSettings} \r\n                  disabled={!connected || isRebalancing}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n            \r\n            <div className=\"bg-blue-900/30 rounded-lg p-6 mt-6 border border-blue-800/50\">\r\n              <h3 className=\"text-lg font-semibold text-blue-300 mb-3\">How Auto-Optimizer Works</h3>\r\n              <div className=\"space-y-3 text-sm text-blue-200\">\r\n                <p>\r\n                  The Auto-Optimizer uses AI to analyze market conditions and your portfolio allocation to automatically maintain the optimal balance for maximum yield.\r\n                </p>\r\n                <p>\r\n                  It will only rebalance when the drift between your current allocation and the optimal allocation exceeds your configured threshold.\r\n                </p>\r\n                <p>\r\n                  Each rebalance requires your wallet approval for the transactions. Make sure your wallet is accessible when a scheduled rebalance occurs.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default AutoOptimizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}